{"version":3,"sources":["app/app.module.js","app/services/user/user.service.js","app/services/profiles/profile.service.js","app/services/profiles/page-ribbon.directive.js","app/services/auth/register.service.js","app/services/auth/principal.service.js","app/services/auth/password-reset-init.service.js","app/services/auth/password-reset-finish.service.js","app/services/auth/password.service.js","app/services/auth/has-authority.directive.js","app/services/auth/has-any-authority.directive.js","app/services/auth/auth.service.js","app/services/auth/activate.service.js","app/services/auth/account.service.js","app/layouts/navbar/navbar.controller.js","app/layouts/navbar/active-menu.directive.js","app/layouts/error/error.state.js","app/home/home.state.js","app/home/home.controller.js","app/entities/room/room-directive.js","app/entities/opening/opening-directive.js","app/entities/mqtt-item/mqtt-item-dialog.controller.js","app/entities/mqtt-item/mqtt-item-detail.controller.js","app/entities/mqtt-item/mqtt-item-delete-dialog.controller.js","app/entities/mqtt-item/mqtt-item.state.js","app/entities/mqtt-item/mqtt-item.service.js","app/entities/mqtt-item/mqtt-item.controller.js","app/entities/items/window2r-directive.js","app/entities/items/window1r-directive.js","app/entities/items/window1-directive.js","app/entities/items/temphum-directive.js","app/entities/items/roller1-directive.js","app/entities/items/roller1_auto-directive.js","app/entities/items/light-directive.js","app/entities/items/door2r-directive.js","app/entities/items/door1-directive.js","app/entities/items/cover-directive.js","app/entities/items/camera-directive.js","app/entities/items/alarm-directive.js","app/entities/item/item-directive.js","app/entities/house/house-directive.js","app/entities/floor/floor-directive.js","app/entities/entity.state.js","app/components/util/truncate-words.filter.js","app/components/util/truncate-characters.filter.js","app/components/util/sort-by.directive.js","app/components/util/sort.directive.js","app/components/util/parse-links.service.js","app/components/util/pagination-util.service.js","app/components/util/jhi-item-count.directive.js","app/components/util/date-util.service.js","app/components/util/data-util.service.js","app/components/util/capitalize.filter.js","app/components/util/base64.service.js","app/components/login/login.service.js","app/components/login/login.controller.js","app/components/language/language.service.js","app/components/language/language.filter.js","app/components/language/language.controller.js","app/components/language/language.constants.js","app/components/form/show-validation.directive.js","app/components/form/pagination.constants.js","app/components/form/minbytes.directive.js","app/components/form/maxbytes.directive.js","app/components/alert/alert-error.directive.js","app/components/alert/alert.service.js","app/components/alert/alert.directive.js","app/blocks/interceptor/notification.interceptor.js","app/blocks/interceptor/errorhandler.interceptor.js","app/blocks/interceptor/auth-expired.interceptor.js","app/blocks/handlers/translation.handler.js","app/blocks/handlers/state.handler.js","app/blocks/config/uib-pagination.config.js","app/blocks/config/uib-pager.config.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/translation.config.js","app/blocks/config/localstorage.config.js","app/blocks/config/http.config.js","app/blocks/config/compile.config.js","app/blocks/config/alert.config.js","app/app.state.js","app/app.constants.js","app/admin/user-management/user-management-dialog.controller.js","app/admin/user-management/user-management-detail.controller.js","app/admin/user-management/user-management-delete-dialog.controller.js","app/admin/user-management/user-management.state.js","app/admin/user-management/user-management.controller.js","app/admin/metrics/metrics.state.js","app/admin/metrics/metrics.service.js","app/admin/metrics/metrics.modal.controller.js","app/admin/metrics/metrics.controller.js","app/admin/logs/logs.state.js","app/admin/logs/logs.service.js","app/admin/logs/logs.controller.js","app/admin/health/health.state.js","app/admin/health/health.service.js","app/admin/health/health.modal.controller.js","app/admin/health/health.controller.js","app/admin/docs/docs.state.js","app/admin/configuration/configuration.state.js","app/admin/configuration/configuration.service.js","app/admin/configuration/configuration.controller.js","app/admin/audits/audits.state.js","app/admin/audits/audits.service.js","app/admin/audits/audits.controller.js","app/admin/admin.state.js","app/account/settings/settings.state.js","app/account/settings/settings.controller.js","app/account/reset/request/reset.request.state.js","app/account/reset/request/reset.request.controller.js","app/account/reset/finish/reset.finish.state.js","app/account/reset/finish/reset.finish.controller.js","app/account/register/register.state.js","app/account/register/register.controller.js","app/account/password/password-strength-bar.directive.js","app/account/password/password.state.js","app/account/password/password.controller.js","app/account/activate/activate.state.js","app/account/activate/activate.controller.js","app/account/account.state.js","app/app.js"],"names":["run","stateHandler","translationHandler","initialize","angular","module","$inject","value","User","$resource","service","query","method","isArray","get","transformResponse","data","fromJson","save","update","delete","factory","ProfileService","$http","getProfileInfo","isUndefined","dataPromise","then","result","activeProfiles","response","ribbonEnv","inProduction","indexOf","swaggerEnabled","pageRibbon","$rootScope","$translate","linkFunc","scope","element","attrs","addClass","removeClass","directive","replace","restrict","template","link","Register","Principal","$q","Account","authenticate","identity","_identity","_authenticated","hasAnyAuthority","authorities","i","length","hasAuthority","authority","this","_id","when","force","getAccountThen","account","deferred","resolve","getAccountCatch","defer","undefined","isDefined","promise","$promise","catch","isAuthenticated","isIdentityResolved","PasswordResetInit","PasswordResetFinish","Password","setVisible","setHidden","defineVisibility","reset","$watch","split","Auth","$state","$sessionStorage","AuthServerProvider","LoginService","Activate","activateAccount","key","callback","cb","noop","err","bind","authorize","authThen","toState","parent","name","go","fromState","getPreviousState","previousState","resetPreviousState","params","storePreviousState","toStateParams","open","authReturn","changePassword","newPassword","createAccount","logout","login","credentials","loginThen","use","langKey","refresh","reject","resetPasswordFinish","keyAndPassword","resetPasswordInit","mail","updateAccount","previousStateName","previousStateParams","interceptor","NavbarController","toggleNavbar","vm","isNavbarCollapsed","collapseNavbar","controller","activeMenu","$locale","tmhDynamicLocale","language","selectedLanguage","set","stateConfig","$stateProvider","state","url","pageTitle","views","content@","templateUrl","translatePartialLoader","$translatePartialLoader","addPart","config","controllerAs","HomeController","$scope","houses","floors","rooms","items","domain","type","protocol","main","recline","temperature","humidity","left","right","percent","isCollapsed","house","filter","DOOR","WINDOW","LIGHT","CLIMATE","COVER","ALARM","CAMERA","allChildrenExpanded","floor","f","room","r","expandAllChildren","expand","houseIndex","equals","console","log","transclude","showLabel","o","MqttItemDialogController","$timeout","$stateParams","$uibModalInstance","entity","MqttItem","clear","dismiss","isSaving","mqttItem","id","onSaveSuccess","onSaveError","$emit","close","focus","MqttItemDetailController","unsubscribe","$on","event","MqttItemDeleteController","confirmDelete","currentStateData","current","href","onEnter","$uibModal","backdrop","size","reload","topic","resourceUrl","MqttItemController","loadAll","mqttItems","searchQuery","h","abstract","words","wordsFilter","input","isNaN","inputWords","slice","join","characters","charactersFilter","chars","breakOnWord","substring","charAt","substr","lastspace","lastIndexOf","jhSortBy","parentCtrl","sort","require","jhSort","predicate","ascending","SortController","bindToController","$element","applyClass","thisIcon","find","sortIcon","sortAsc","sortDesc","remove","add","resetClasses","allThIcons","field","$apply","triggerApply","values","$watchGroup","ParseLinks","parse","header","Error","parts","links","forEach","p","section","trim","queryString","RegExp","$0","$1","$2","$3","page","isString","parseInt","PaginationUtil","parseAscending","sortArray","parsePage","parsePredicate","pop","jhiItemCount","bindings","queryCount","itemsPerPage","component","DateUtils","$filter","convertDateTimeFromServer","date","Date","convertLocalDateFromServer","dateString","convertLocalDateToServer","dateformat","DataUtils","$window","abbreviate","text","byteSize","base64String","endsWith","suffix","str","paddingSize","formatAsBytes","toString","openFile","toBase64","file","fileReader","FileReader","readAsDataURL","onload","e","base64Data","target","capitalize","capitalizeFilter","toLowerCase","toUpperCase","Base64","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","keyStr","decode","String","fromCharCode","modalInstance","animation","resetModal","LoginController","cancel","username","password","rememberMe","authenticationError","preventDefault","$broadcast","register","requestResetPassword","JhiLanguageService","LANGUAGES","getAll","getCurrent","storage","findLanguageFromKey","findLanguageFromKeyFilter","lang","ca","cs","da","de","el","en","es","et","fr","gl","hu","hi","hy","it","ja","ko","mr","nl","pl","pt-br","pt-pt","ro","ru","sk","sr","sv","ta","th","tr","vi","zh-cn","zh-tw","JhiLanguageController","changeLanguage","languageKey","languages","constant","showValidation","formCtrl","each","$formGroup","$inputs","$input","inputName","attr","$invalid","$dirty","isInvalid","toggleClass","minbytes","ngModel","$validators","modelValue","$isEmpty","numberOfBytes","maxbytes","jhiAlertErrorController","AlertService","addErrorAlert","message","alerts","push","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","httpResponse","stopPropagation","status","headers","Object","keys","errorHeader","entityKey","entityName","instant","fieldErrors","fieldError","convertedField","fieldName","objectName","toJson","jhiAlertError","getService","$sce","success","position","error","warning","info","alertOptions","alert","trustAsHtml","alertId","closeAlert","addAlert","extAlerts","that","thisAlerts","closeAlertByIndex","map","index","splice","$get","showAsToast","provider","jhiAlertController","jhiAlert","notificationInterceptor","alertKey","param","errorHandlerInterceptor","responseError","path","authExpiredInterceptor","translateChangeSuccess","updateTitle","titleKey","$current","title","document","VERSION","stateChangeStart","external","stateChangeSuccess","toParams","fromParams","paginationConfig","uibPaginationConfig","paginationConstants","maxSize","boundaryLinks","firstText","previousText","nextText","lastText","pagerConfig","uibPagerConfig","translationStorageProvider","$cookies","$log","getObject","putObject","put","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","httpConfig","$urlRouterProvider","$httpProvider","httpRequestInterceptorCacheBusterProvider","$urlMatcherFactoryProvider","setMatchlist","otherwise","interceptors","val","a","b","is","pattern","compileServiceConfig","$compileProvider","DEBUG_INFO_ENABLED","debugInfoEnabled","alertServiceConfig","AlertServiceProvider","navbar@","UserManagementDialogController","user","UserManagementDetailController","load","UserManagementDeleteController","squash","pagingParams","firstName","lastName","email","activated","createdBy","createdDate","lastModifiedBy","lastModifiedDate","resetDate","resetKey","UserManagementController","setActive","isActivated","onSuccess","onError","totalItems","users","reverse","loadPage","transition","transitionTo","search","currentSearch","currentAccount","JhiMetricsService","getMetrics","threadDump","JhiMetricsMonitoringModalController","getLabelClass","threadState","threadDumpAll","threadDumpBlocked","threadDumpRunnable","threadDumpTimedWaiting","threadDumpWaiting","JhiMetricsMonitoringController","updatingMetrics","metrics","refreshThreadDumpData","servicesStats","newValue","timers","LogsService","findAll","changeLevel","LogsController","level","loggers","JhiHealthService","checkHealth","transformHealthData","flattenHealthData","getBaseName","getSubSystemName","remainder","isHealthObject","hasSubSystem","addHealthObject","getModuleName","isLeaf","healthObject","healthData","details","hasDetails","extend","separator","HealthModalController","currentHealth","baseName","subSystemName","JhiHealthCheckController","statusState","updatingHealth","showHealth","health","JhiConfigurationService","getConfigPropsComplete","properties","orderBy","getEnv","getEnvComplete","vals","v","k","JhiConfigurationController","allConfiguration","configuration","AuditsService","fromDate","toDate","AuditsController","onChangeDate","dateFormat","audits","today","getFullYear","getMonth","getDate","previousMonth","SettingsController","settingsAccount","copyAccount","RequestResetController","requestReset","errorEmailNotExists","resetAccount","ResetFinishController","finishReset","doNotMatch","confirmPassword","keyMissing","RegisterController","registerAccount","errorUserExists","errorEmailExists","passwordStrengthBar","iElement","strength","colors","mesureStrength","_force","_regex","_lowerLetters","test","_upperLetters","_numbers","_symbols","_flags","_passedMatches","$","grep","Math","min","getColor","s","idx","col","c","children","css","background-color","passwordToCheck","PasswordController","ActivationController","$templateCache"],"mappings":"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","file":"app/app-c3e40d012c.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'ui.bootstrap',\n            'ui.bootstrap.datetimepicker',\n            'ui.router',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar',\n            'ui.toggle'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler', 'translationHandler'];\n\n    function run(stateHandler, translationHandler) {\n        stateHandler.initialize();\n        translationHandler.initialize();\n    }\n\n    angular\n        .module('eHomeApp').value('items', []);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User ($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': { method:'POST' },\n            'update': { method:'PUT' },\n            'delete':{ method:'DELETE'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" data-translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account'];\n\n    function Principal ($q, Account) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate (identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n        }\n\n        function hasAnyAuthority (authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority (authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function(_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function(){\n                return false;\n            });\n        }\n\n        function identity (force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n            return deferred.promise;\n\n            function getAccountThen (account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch () {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n        }\n\n        function isAuthenticated () {\n            return _authenticated;\n        }\n\n        function isIdentityResolved () {\n            return angular.isDefined(_identity);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('NavbarController', NavbarController);\n\n    NavbarController.$inject = ['$state'];\n    //, 'ProfileService', 'Auth', 'Principal', 'LoginService'];\n\n    function NavbarController ($state){ \n        //, ProfileService, Auth, Principal, LoginService) {\n        var vm = this;\n\n        vm.isNavbarCollapsed = true;\n        vm.isAuthenticated = function(){return true;}; //Principal.isAuthenticated;\n\n        vm.inProduction = true;\n        vm.swaggerEnabled = false;\n        // ProfileService.getProfileInfo().then(function(response) {\n        //     vm.inProduction = response.inProduction;\n        //     vm.swaggerEnabled = response.swaggerEnabled;\n        // });\n\n        // vm.login = login;\n        // vm.logout = logout;\n        vm.toggleNavbar = toggleNavbar;\n        vm.collapseNavbar = collapseNavbar;\n        vm.$state = $state;\n\n        // function login() {\n        //     collapseNavbar();\n        //     LoginService.open();\n        // }\n\n        // function logout() {\n        //     collapseNavbar();\n        //     Auth.logout();\n        //     $state.go('home');\n        // }\n\n        function toggleNavbar() {\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\n        }\n\n        function collapseNavbar() {\n            vm.isNavbarCollapsed = true;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('activeMenu', activeMenu);\n\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\n\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var language = attrs.activeMenu;\n\n            scope.$watch(function() {\n                return $translate.use();\n            }, function(selectedLanguage) {\n                if (language === selectedLanguage) {\n                    tmhDynamicLocale.set(language);\n                    element.addClass('active');\n                } else {\n                    element.removeClass('active');\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('HomeController', HomeController);\n\n    // HomeController.$inject = ['$scope', 'Principal', 'LoginService', '$state'];\n    HomeController.$inject = ['$scope', '$state'];\n\n    // function HomeController ($scope, Principal, LoginService, $state) {\n    function HomeController ($scope, $state) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = true; //null;\n        // vm.login = LoginService.open;\n        // vm.register = register;\n        // $scope.$on('authenticationSuccess', function() {\n        //     getAccount();\n        // });\n\n        // getAccount();\n\n        // function getAccount() {\n        //     Principal.identity().then(function(account) {\n        //         vm.account = account;\n        //         vm.isAuthenticated = Principal.isAuthenticated;\n        //     });\n        // }\n        // function register () {\n        //     $state.go('register');\n        // }\n\n        vm.houses = [\n            { \n                name: 'Διαμέρισμα Αντώνη', \n                floors: [ \n                    { \n                        name: '4ος', \n                        rooms: [ \n                            { \n                                name: \"Χωλ\",\n                                items: [\n                                    { name: 'Πόρτα εισόδου', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Παράθυρο φωταγωγού', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Εξωτερικό φως εισόδου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },                                    \n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 25, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Σαλόνι\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1_AUTO', protocol: 'mqtt', state: { main: 'OPEN', percent: 10 } },\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό παραθύρου', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Γυάλινος Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Γυάλινος Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Ξύλινος Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Ξύλινος Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Σποτ μπαλκονόπορτα', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Σποτ παραθύρου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Εξωτερικό φως μπαλκονόπορτα', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Εξωτερικό φως παραθύρου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα 1', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Κάμερα 2', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },                                    \n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 26, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κουζίνα\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Φως φαγητού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 29, humidity: 18 } }\n                                ]\n                            }, \n                            { \n                                name: \"Μπάνιο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 32, humidity: 80 } }\n                                ]\n                            }, \n                            { name: \"WC\", items: [ { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' } ] }, \n                            { \n                                name: \"Κρεββατοκάμαρα\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Σποτ', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 22, humidity: 11 } }\n                                ]\n                            }, \n                            { \n                                name: \"Γραφείο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'DOOR', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'OPEN', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 23, humidity: 10 } }\n                                ]\n                            } \n                        ] \n                    } \n                ],\n                items: [ { name: 'Συναγερμός', domain: 'ALARM', type: 'ALARM', protocol: 'mqtt' } ]\n            },\n            { \n                name: 'Διαμέρισμα Ειρήνης', \n                floors: [ \n                    { \n                        name: '3ος', \n                        rooms: [ \n                            { \n                                name: \"Χωλ\",\n                                items: [\n                                    { name: 'Πόρτα εισόδου', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Εξωτερικό φως εισόδου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 22, humidity: 11 } }\n                                ]\n                            }, \n                            { \n                                name: \"Σαλόνι\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 23, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Τραπεζαρία\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Ρολό παραθύρου', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 24, humidity: 11 } }\n                                ]\n                            }, \n                            { \n                                name: \"Καθιστικό\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 20, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κουζίνα\",\n                                items: [\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 28, humidity: 23 } }\n                                ]\n                            }, \n                            { \n                                name: \"Μπάνιο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 20, humidity: 17 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κρεββατοκάμαρα\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 24, humidity: 11 } }\n                                ]\n                            } \n                        ] \n                    } \n                ],\n                items: [ { name: 'Συναγερμός', domain: 'ALARM', type: 'ALARM', protocol: 'mqtt' } ] \n            },\n            { name: 'Εξοχικό Αλυκή', floors: [ \n                { name: 'Ισόγειο', rooms: [ { name: 'Κουζίνα' }, { name: 'Σαλόνι' }, { name: 'Μπάνιο' } ] }, \n                { name: '1ος', rooms: [ { name: 'Σαλόνι' }, { name: 'Μπάνιο' }, { name: 'WC' }, { name: 'Κρεββατοκάμαρα' }, { name: 'Κρεββατοκάμαρα παιδιών' }, { name: 'Κρεββατοκάμαρα Αθηνάς' }, { name: 'Κρεββατοκάμαρα δυτική' } ] } \n                ] \n            },\n            { \n                name: 'Silicontech', \n                floors: [ \n                    { \n                        name: '1ος', \n                        rooms: [ \n                            { \n                                name: \"Χωλ\",\n                                items: [\n                                    { name: 'Πόρτα εισόδου', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Εξωτερικό φως εισόδου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Σποτ', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                ]\n                            }, \n                            { \n                                name: \"Σαλόνι\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1_AUTO', protocol: 'mqtt', state: { main: 'OPEN', percent: 10 } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 27, humidity: 9 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κουζίνα\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Παράθυρο διπλό', domain: 'WINDOW', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Παράθυρο μονό', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Σποτ', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 29, humidity: 36 } }\n                                ]\n                            }, \n                            { \n                                name: \"Μπάνιο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 28, humidity: 35 } }\n                                ]\n                            }, \n                            { \n                                name: \"Γραφείο\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1_AUTO', protocol: 'mqtt', state: { main: 'CLOSED', percent: 100 } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 26, humidity: 27 } }\n                                ]\n                            } \n                        ] \n                    } \n                ],\n                items: [ { name: 'Συναγερμός', domain: 'ALARM', type: 'ALARM', protocol: 'mqtt' } ]\n            }\n        ];\n\n        // console.log( vm.houses );\n        vm.isCollapsed = [];        \n        for( var i = 0 ; i < vm.houses.length ; i++ )\n        {            \n            vm.isCollapsed[i] = { \n                house: true,\n                filter: { DOOR: true, WINDOW: true, LIGHT: true, CLIMATE: true, COVER: true, ALARM: true, CAMERA: true },\n                allChildrenExpanded: false, \n                floor: [] \n            };\n            for( var f  = 0 ; f < vm.houses[i].floors.length ; f++ )\n            {\n                vm.isCollapsed[i].floor[f] = { floor: true, room: [] };\n                // console.log( 'House[',i,'].floors[',f,']: ', vm.houses[i].floors[f] );\n                for( var r  = 0 ; r < vm.houses[i].floors[f].rooms.length ; r++ )\n                {\n                    vm.isCollapsed[i].floor[f].room[r] = { room: true };\n                }\n            }\n        }\n\n        vm.expandAllChildren = function( house, expand )\n        {\n            for( var houseIndex = 0 ; houseIndex < vm.houses.length ; houseIndex++ )\n            {\n                if( !angular.equals( vm.houses[houseIndex], house ) )\n                {\n                    continue;\n                }\n                            \n                vm.isCollapsed[ houseIndex ].house = expand;\n                vm.isCollapsed[ houseIndex ].allChildrenExpanded = !expand;\n                for( var f = 0 ; f < vm.houses[houseIndex].floors.length ; f++ )\n                {\n                    vm.isCollapsed[houseIndex].floor[f].floor = expand;\n                    for( var r  = 0 ; r < vm.houses[houseIndex].floors[f].rooms.length ; r++ )\n                    {\n                        vm.isCollapsed[houseIndex].floor[f].room[r].room = expand;\n                    }\n                }\n            }\n        }\n        \n\n        console.log( vm.isCollapsed );\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'room', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    r: '=room',\n                    showLabel: '=',\n                    isCollapsed: '=',\n                    filter: '='\n                },\n                templateUrl: '/app/entities/room/room.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'opening', function()\n        {\n            return {\n                restrict: 'E',\n                scope: { \n                    type: '=',\n                    o: '=opening'\n                },\n                templateUrl: '/app/entities/opening/opening.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemDialogController', MqttItemDialogController);\n\n    MqttItemDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'MqttItem'];\n\n    function MqttItemDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, MqttItem) {\n        var vm = this;\n\n        vm.mqttItem = entity;\n        vm.clear = clear;\n        vm.save = save;\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.mqttItem.id !== null) {\n                MqttItem.update(vm.mqttItem, onSaveSuccess, onSaveError);\n            } else {\n                MqttItem.save(vm.mqttItem, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('eHomeApp:mqttItemUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemDetailController', MqttItemDetailController);\n\n    MqttItemDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'MqttItem'];\n\n    function MqttItemDetailController($scope, $rootScope, $stateParams, previousState, entity, MqttItem) {\n        var vm = this;\n\n        vm.mqttItem = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('eHomeApp:mqttItemUpdate', function(event, result) {\n            vm.mqttItem = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemDeleteController',MqttItemDeleteController);\n\n    MqttItemDeleteController.$inject = ['$uibModalInstance', 'entity', 'MqttItem'];\n\n    function MqttItemDeleteController($uibModalInstance, entity, MqttItem) {\n        var vm = this;\n\n        vm.mqttItem = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            MqttItem.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('mqtt-item', {\n            parent: 'entity',\n            url: '/mqtt-item',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'eHomeApp.mqttItem.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/mqtt-item/mqtt-items.html',\n                    controller: 'MqttItemController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('mqttItem');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('mqtt-item-detail', {\n            parent: 'mqtt-item',\n            url: '/mqtt-item/{id}',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'eHomeApp.mqttItem.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-detail.html',\n                    controller: 'MqttItemDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('mqttItem');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'MqttItem', function($stateParams, MqttItem) {\n                    return MqttItem.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'mqtt-item',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('mqtt-item-detail.edit', {\n            parent: 'mqtt-item-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-dialog.html',\n                    controller: 'MqttItemDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['MqttItem', function(MqttItem) {\n                            return MqttItem.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('mqtt-item.new', {\n            parent: 'mqtt-item',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-dialog.html',\n                    controller: 'MqttItemDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                topic: null,\n                                state: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('mqtt-item', null, { reload: 'mqtt-item' });\n                }, function() {\n                    $state.go('mqtt-item');\n                });\n            }]\n        })\n        .state('mqtt-item.edit', {\n            parent: 'mqtt-item',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-dialog.html',\n                    controller: 'MqttItemDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['MqttItem', function(MqttItem) {\n                            return MqttItem.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('mqtt-item', null, { reload: 'mqtt-item' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('mqtt-item.delete', {\n            parent: 'mqtt-item',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-delete-dialog.html',\n                    controller: 'MqttItemDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['MqttItem', function(MqttItem) {\n                            return MqttItem.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('mqtt-item', null, { reload: 'mqtt-item' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('eHomeApp')\n        .factory('MqttItem', MqttItem);\n\n    MqttItem.$inject = ['$resource'];\n\n    function MqttItem ($resource) {\n        var resourceUrl =  'api/mqtt-items/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemController', MqttItemController);\n\n    MqttItemController.$inject = ['MqttItem'];\n\n    function MqttItemController(MqttItem) {\n\n        var vm = this;\n\n        vm.mqttItems = [];\n\n        loadAll();\n\n        function loadAll() {\n            MqttItem.query(function(result) {\n                vm.mqttItems = result;\n                vm.searchQuery = null;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'window2r', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/window2r.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'window1r', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/window1r.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'window1', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/window1.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'temphum', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/temphum.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'roller1', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/roller1.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'roller1auto', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/roller1_auto.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'light', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/light.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'door2r', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/door2r.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'door1', function()\n        {\n            return {                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/door1.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'cover', function()\n        {\n            return {                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/cover.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'camera', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/camera.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'alarm', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/alarm.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'item', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    i: '=item',\n                    filter: '='\n                },\n                templateUrl: '/app/entities/item/item.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'house', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    h: '=house',\n                    isCollapsed: '=',\n                    expandAllChildren: '&expandAllChildren'\n                },\n                templateUrl: '/app/entities/house/house.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'floor', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    f: '=floor',\n                    showLabel: '=',\n                    isCollapsed: '=',\n                    filter: '='\n                },\n                templateUrl: '/app/entities/floor/floor.html'\n            };\n        }\n        );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('characters', characters);\n\n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n","(function(){\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('eHomeApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils($filter) {\n\n        var service = {\n            convertDateTimeFromServer: convertDateTimeFromServer,\n            convertLocalDateFromServer: convertLocalDateFromServer,\n            convertLocalDateToServer: convertLocalDateToServer,\n            dateformat: dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer(date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer(date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer(date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat() {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$uibModal'];\n\n    function LoginService ($uibModal) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open () {\n            if (modalInstance !== null) return;\n            modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.result.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.cancel = cancel;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n        vm.username = null;\n\n        $timeout(function (){angular.element('#username').focus();});\n\n        function cancel () {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function login (event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $uibModalInstance.close();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                    $state.go('home');\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is successful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiLanguageService', JhiLanguageService);\n\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\n\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'ca': 'Català',\n                'cs': 'Český',\n                'da': 'Dansk',\n                'de': 'Deutsch',\n                'el': 'Ελληνικά',\n                'en': 'English',\n                'es': 'Español',\n                'et': 'Eesti',\n                'fr': 'Français',\n                'gl': 'Galego',\n                'hu': 'Magyar',\n                'hi': 'हिंदी',\n                'hy': 'Հայերեն',\n                'it': 'Italiano',\n                'ja': '日本語',\n                'ko': '한국어',\n                'mr': 'मराठी',\n                'nl': 'Nederlands',\n                'pl': 'Polski',\n                'pt-br': 'Português (Brasil)',\n                'pt-pt': 'Português',\n                'ro': 'Română',\n                'ru': 'Русский',\n                'sk': 'Slovenský',\n                'sr': 'Srpski',\n                'sv': 'Svenska',\n                'ta': 'தமிழ்',\n                'th': 'ไทย',\n                'tr': 'Türkçe',\n                'vi': 'Tiếng Việt',\n                'zh-cn': '中文（简体）',\n                'zh-tw': '繁體中文'\n            }[lang];\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiLanguageController', JhiLanguageController);\n\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\n\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n\n        /*\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n         They are written in English to avoid character encoding issues (not a perfect solution)\n         */\n        .constant('LANGUAGES', [\n            'en',\n            'el'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('eHomeApp')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key, data) {\n            key = key ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('eHomeApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var headers = Object.keys(httpResponse.headers()).filter(function (header) {\n                    return header.indexOf('app-error', header.length - 'app-error'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n                }).sort();\n                var errorHeader = httpResponse.headers(headers[0]);\n                var entityKey = httpResponse.headers(headers[1]);\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('eHomeApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService () {\n        this.toast = false;\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        this.showAsToast = function(isToast) {\n            this.toast = isToast;\n        };\n\n        getService.$inject = ['$timeout', '$sce', '$translate'];\n\n        function getService ($timeout, $sce,$translate) {\n            var toast = this.toast,\n                alertId = 0, // unique id for each alert. Starts from 0.\n                alerts = [],\n                timeout = 5000; // default timeout\n\n            return {\n                factory: factory,\n                isToast: isToast,\n                add: addAlert,\n                closeAlert: closeAlert,\n                closeAlertByIndex: closeAlertByIndex,\n                clear: clear,\n                get: get,\n                success: success,\n                error: error,\n                info: info,\n                warning : warning\n            };\n\n            function isToast() {\n                return toast;\n            }\n\n            function clear() {\n                alerts = [];\n            }\n\n            function get() {\n                return alerts;\n            }\n\n            function success(msg, params, position) {\n                return this.add({\n                    type: 'success',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function error(msg, params, position) {\n                return this.add({\n                    type: 'danger',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function warning(msg, params, position) {\n                return this.add({\n                    type: 'warning',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function info(msg, params, position) {\n                return this.add({\n                    type: 'info',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function factory(alertOptions) {\n                var alert = {\n                    type: alertOptions.type,\n                    msg: $sce.trustAsHtml(alertOptions.msg),\n                    id: alertOptions.alertId,\n                    timeout: alertOptions.timeout,\n                    toast: alertOptions.toast,\n                    position: alertOptions.position ? alertOptions.position : 'top right',\n                    scoped: alertOptions.scoped,\n                    close: function (alerts) {\n                        return closeAlert(this.id, alerts);\n                    }\n                };\n                if(!alert.scoped) {\n                    alerts.push(alert);\n                }\n                return alert;\n            }\n\n            function addAlert(alertOptions, extAlerts) {\n                alertOptions.alertId = alertId++;\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n                var that = this;\n                var alert = this.factory(alertOptions);\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\n                    $timeout(function () {\n                        that.closeAlert(alertOptions.alertId, extAlerts);\n                    }, alertOptions.timeout);\n                }\n                return alert;\n            }\n\n            function closeAlert(id, extAlerts) {\n                var thisAlerts = extAlerts ? extAlerts : alerts;\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\n            }\n\n            function closeAlertByIndex(index, thisAlerts) {\n                return thisAlerts.splice(index, 1);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiAlert = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertController\n    };\n\n    angular\n        .module('eHomeApp')\n        .component('jhiAlert', jhiAlert);\n\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\n\n    function jhiAlertController($scope, AlertService) {\n        var vm = this;\n\n        vm.alerts = AlertService.get();\n        $scope.$on('$destroy', function () {\n            vm.alerts = [];\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('notificationInterceptor', notificationInterceptor);\n\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\n\n    function notificationInterceptor ($q, AlertService) {\n        var service = {\n            response: response\n        };\n\n        return service;\n\n        function response (response) {\n            var headers = Object.keys(response.headers()).filter(function (header) {\n                return header.indexOf('app-alert', header.length - 'app-alert'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n            }).sort();\n            var alertKey = response.headers(headers[0]);\n            if (angular.isString(alertKey)) {\n                AlertService.success(alertKey, { param : response.headers(headers[1])});\n            }\n            return response;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('eHomeApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    function authExpiredInterceptor(){\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            // // If we have an unauthorized request we redirect to the login page\n            // // Don't do this check on the account API to avoid infinite loop\n            // if (response.status === 401 && angular.isDefined(response.data.path) && response.data.path.indexOf('/api/account') === -1) {\n            //     var Auth = $injector.get('Auth');\n            //     var to = $rootScope.toState;\n            //     var params = $rootScope.toStateParams;\n            //     Auth.logout();\n            //     if (to.name !== 'accessdenied') {\n            //         Auth.storePreviousState(to.name, params);\n            //     }\n            //     var LoginService = $injector.get('LoginService');\n            //     LoginService.open();\n            // }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        // update the window title using params in the following\n        // precedence\n        // 1. titleKey parameter\n        // 2. $state.$current.data.pageTitle (current state page title)\n        // 3. 'global.title'\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window', 'VERSION'];\n        // 'Auth', 'Principal'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window, VERSION)\n        // Auth, Principal) \n        {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                // if (Principal.isIdentityResolved()) {\n                //     Auth.authorize();\n                // }\n\n                // Update the language\n                JhiLanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"en\"');\n                $cookies.putObject(name, 'en');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('en');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        // $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('notificationInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        // disable debug data on prod profile to improve performance\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n\n        /*\n        If you wish to debug an application with this information\n        then you should open up a debug console in the browser\n        then call this method directly in this console:\n\n\t\tangular.reloadWithDebugInfo();\n\t\t*/\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(alertServiceConfig);\n\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\n\n    function alertServiceConfig(AlertServiceProvider) {\n        // set below to true to make alerts look like toast\n        AlertServiceProvider.showAsToast(false);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'navbar@': {\n                    templateUrl: 'app/layouts/navbar/navbar.html',\n                    controller: 'NavbarController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                // authorize: ['Auth',\n                //     function (Auth) {\n                //         return Auth.authorize();\n                //     }\n                // ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('eHomeApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementDialogController',UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\n\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.clear = clear;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function onSaveSuccess (result) {\n            vm.isSaving = false;\n            $uibModalInstance.close(result);\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                User.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\n\n    function UserManagementDetailController($stateParams, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n\n        vm.load($stateParams.login);\n\n        function load(login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\n\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\n\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\n        var vm = this;\n\n        vm.user = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (login) {\n            User.delete({login: login},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('user-management', {\n            parent: 'admin',\n            url: '/user-management?page&sort',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'userManagement.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management.html',\n                    controller: 'UserManagementController',\n                    controllerAs: 'vm'\n                }\n            },            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                }\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort)\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n\n            }        })\n        .state('user-management.new', {\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                id: null, login: null, firstName: null, lastName: null, email: null,\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                                resetKey: null, authorities: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('user-management');\n                });\n            }]\n        })\n        .state('user-management.edit', {\n            url: '/{login}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('user-management-detail', {\n            parent: 'user-management',\n            url: '/{login}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'user-management.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\n                    controller: 'UserManagementDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('user-management.delete', {\n            url: '/{login}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\n                    controller: 'UserManagementDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'pagingParams', 'paginationConstants', 'JhiLanguageService'];\n\n    function UserManagementController(Principal, User, ParseLinks, AlertService, $state, pagingParams, paginationConstants, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.languages = null;\n        vm.loadAll = loadAll;\n        vm.setActive = setActive;\n        vm.users = [];\n        vm.page = 1;\n        vm.totalItems = null;\n        vm.clear = clear;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.transition = transition;\n\n        vm.loadAll();\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n        Principal.identity().then(function(account) {\n            vm.currentAccount = account;\n        });\n\n        function setActive (user, isActivated) {\n            user.activated = isActivated;\n            User.update(user, function () {\n                vm.loadAll();\n                vm.clear();\n            });\n        }\n\n        function loadAll () {\n            User.query({\n                page: pagingParams.page - 1,\n                size: vm.itemsPerPage,\n                sort: sort()\n            }, onSuccess, onError);\n        }\n\n        function onSuccess(data, headers) {\n            vm.links = ParseLinks.parse(headers('link'));\n            vm.totalItems = headers('X-Total-Count');\n            vm.queryCount = vm.totalItems;\n            vm.page = pagingParams.page;\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n        function clear () {\n            vm.user = {\n                id: null, login: null, firstName: null, lastName: null, email: null,\n                activated: null, langKey: null, createdBy: null, createdDate: null,\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                resetKey: null, authorities: null\n            };\n        }\n\n        function sort () {\n            var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n            if (vm.predicate !== 'id') {\n                result.push('id');\n            }\n            return result;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'JhiMetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiMetricsService', JhiMetricsService);\n\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\n\n    function JhiMetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\n\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\n\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.getLabelClass = getLabelClass;\n        vm.threadDump = threadDump;\n        vm.threadDumpAll = 0;\n        vm.threadDumpBlocked = 0;\n        vm.threadDumpRunnable = 0;\n        vm.threadDumpTimedWaiting = 0;\n        vm.threadDumpWaiting = 0;\n\n        angular.forEach(threadDump, function(value) {\n            if (value.threadState === 'RUNNABLE') {\n                vm.threadDumpRunnable += 1;\n            } else if (value.threadState === 'WAITING') {\n                vm.threadDumpWaiting += 1;\n            } else if (value.threadState === 'TIMED_WAITING') {\n                vm.threadDumpTimedWaiting += 1;\n            } else if (value.threadState === 'BLOCKED') {\n                vm.threadDumpBlocked += 1;\n            }\n        });\n\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\n\n        function cancel () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function getLabelClass (threadState) {\n            if (threadState === 'RUNNABLE') {\n                return 'label-success';\n            } else if (threadState === 'WAITING') {\n                return 'label-info';\n            } else if (threadState === 'TIMED_WAITING') {\n                return 'label-warning';\n            } else if (threadState === 'BLOCKED') {\n                return 'label-danger';\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\n\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\n\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\n        var vm = this;\n\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.refreshThreadDumpData = refreshThreadDumpData;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n            });\n\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            JhiMetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n        function refreshThreadDumpData () {\n            JhiMetricsService.threadDump().then(function(data) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\n                    controller: 'JhiMetricsMonitoringModalController',\n                    controllerAs: 'vm',\n                    size: 'lg',\n                    resolve: {\n                        threadDump: function() {\n                            return data;\n                        }\n\n                    }\n                });\n            });\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'JhiHealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiHealthService', JhiHealthService);\n\n    JhiHealthService.$inject = ['$rootScope', '$http'];\n\n    function JhiHealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular.module('eHomeApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $uibModalInstance.dismiss('cancel');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\n\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\n\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = JhiHealthService.getBaseName;\n        vm.subSystemName = JhiHealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass (statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh () {\n            vm.updatingHealth = true;\n            JhiHealthService.checkHealth().then(function (response) {\n                vm.healthData = JhiHealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth (health) {\n            $uibModal.open({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                size: 'lg',\n                resolve: {\n                    currentHealth: function() {\n                        return health;\n                    },\n                    baseName: function() {\n                        return vm.baseName;\n                    },\n                    subSystemName: function() {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'JhiConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiConfigurationService', JhiConfigurationService);\n\n    JhiConfigurationService.$inject = ['$filter', '$http'];\n\n    function JhiConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiConfigurationController', JhiConfigurationController);\n\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\n\n    function JhiConfigurationController (filter,JhiConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        JhiConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        JhiConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n\n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\n\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\n        var vm = this;\n\n        vm.error = null;\n        vm.save = save;\n        vm.settingsAccount = null;\n        vm.success = null;\n\n        /**\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\n         */\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                vm.error = null;\n                vm.success = 'OK';\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                JhiLanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['$timeout', 'Auth'];\n\n    function RequestResetController ($timeout, Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#email').focus();});\n\n        function requestReset () {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'email address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\n\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#password').focus();});\n\n        function finishReset() {\n            vm.doNotMatch = null;\n            vm.error = null;\n            if (vm.resetAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService'];\n\n    function RegisterController ($translate, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#login').focus();});\n\n        function register () {\n            if (vm.registerAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.registerAccount.langKey = $translate.use();\n                vm.doNotMatch = null;\n                vm.error = null;\n                vm.errorUserExists = null;\n                vm.errorEmailExists = null;\n\n                Auth.createAccount(vm.registerAccount).then(function () {\n                    vm.success = 'OK';\n                }).catch(function (response) {\n                    vm.success = null;\n                    if (response.status === 400 && response.data === 'login already in use') {\n                        vm.errorUserExists = 'ERROR';\n                    } else if (response.status === 400 && response.data === 'email address already in use') {\n                        vm.errorEmailExists = 'ERROR';\n                    } else {\n                        vm.error = 'ERROR';\n                    }\n                });\n            }\n        }\n    }\n})();\n","/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penalty (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penalty (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal'];\n\n    function PasswordController (Auth, Principal) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.success = null;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            if (vm.password !== vm.confirmPassword) {\n                vm.error = null;\n                vm.success = null;\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.doNotMatch = null;\n                Auth.changePassword(vm.password).then(function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'ui.bootstrap',\n            'ui.bootstrap.datetimepicker',\n            'ui.router',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar',\n            'ui.toggle'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler', 'translationHandler'];\n\n    function run(stateHandler, translationHandler) {\n        stateHandler.initialize();\n        translationHandler.initialize();\n    }\n\n    angular\n        .module('eHomeApp').value('items', []);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User ($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': { method:'POST' },\n            'update': { method:'PUT' },\n            'delete':{ method:'DELETE'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" data-translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account'];\n\n    function Principal ($q, Account) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate (identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n        }\n\n        function hasAnyAuthority (authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority (authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function(_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function(){\n                return false;\n            });\n        }\n\n        function identity (force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n            return deferred.promise;\n\n            function getAccountThen (account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch () {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n        }\n\n        function isAuthenticated () {\n            return _authenticated;\n        }\n\n        function isIdentityResolved () {\n            return angular.isDefined(_identity);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('NavbarController', NavbarController);\n\n    NavbarController.$inject = ['$state'];\n    //, 'ProfileService', 'Auth', 'Principal', 'LoginService'];\n\n    function NavbarController ($state){ \n        //, ProfileService, Auth, Principal, LoginService) {\n        var vm = this;\n\n        vm.isNavbarCollapsed = true;\n        vm.isAuthenticated = function(){return true;}; //Principal.isAuthenticated;\n\n        vm.inProduction = true;\n        vm.swaggerEnabled = false;\n        // ProfileService.getProfileInfo().then(function(response) {\n        //     vm.inProduction = response.inProduction;\n        //     vm.swaggerEnabled = response.swaggerEnabled;\n        // });\n\n        // vm.login = login;\n        // vm.logout = logout;\n        vm.toggleNavbar = toggleNavbar;\n        vm.collapseNavbar = collapseNavbar;\n        vm.$state = $state;\n\n        // function login() {\n        //     collapseNavbar();\n        //     LoginService.open();\n        // }\n\n        // function logout() {\n        //     collapseNavbar();\n        //     Auth.logout();\n        //     $state.go('home');\n        // }\n\n        function toggleNavbar() {\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\n        }\n\n        function collapseNavbar() {\n            vm.isNavbarCollapsed = true;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('activeMenu', activeMenu);\n\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\n\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var language = attrs.activeMenu;\n\n            scope.$watch(function() {\n                return $translate.use();\n            }, function(selectedLanguage) {\n                if (language === selectedLanguage) {\n                    tmhDynamicLocale.set(language);\n                    element.addClass('active');\n                } else {\n                    element.removeClass('active');\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('HomeController', HomeController);\n\n    // HomeController.$inject = ['$scope', 'Principal', 'LoginService', '$state'];\n    HomeController.$inject = ['$scope', '$state'];\n\n    // function HomeController ($scope, Principal, LoginService, $state) {\n    function HomeController ($scope, $state) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = true; //null;\n        // vm.login = LoginService.open;\n        // vm.register = register;\n        // $scope.$on('authenticationSuccess', function() {\n        //     getAccount();\n        // });\n\n        // getAccount();\n\n        // function getAccount() {\n        //     Principal.identity().then(function(account) {\n        //         vm.account = account;\n        //         vm.isAuthenticated = Principal.isAuthenticated;\n        //     });\n        // }\n        // function register () {\n        //     $state.go('register');\n        // }\n\n        vm.houses = [\n            { \n                name: 'Διαμέρισμα Αντώνη', \n                floors: [ \n                    { \n                        name: '4ος', \n                        rooms: [ \n                            { \n                                name: \"Χωλ\",\n                                items: [\n                                    { name: 'Πόρτα εισόδου', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Παράθυρο φωταγωγού', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Εξωτερικό φως εισόδου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },                                    \n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 25, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Σαλόνι\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1_AUTO', protocol: 'mqtt', state: { main: 'OPEN', percent: 10 } },\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό παραθύρου', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Γυάλινος Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Γυάλινος Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Ξύλινος Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Ξύλινος Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Σποτ μπαλκονόπορτα', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Σποτ παραθύρου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Εξωτερικό φως μπαλκονόπορτα', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Εξωτερικό φως παραθύρου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα 1', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Κάμερα 2', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },                                    \n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 26, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κουζίνα\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Φως φαγητού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 29, humidity: 18 } }\n                                ]\n                            }, \n                            { \n                                name: \"Μπάνιο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 32, humidity: 80 } }\n                                ]\n                            }, \n                            { name: \"WC\", items: [ { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' } ] }, \n                            { \n                                name: \"Κρεββατοκάμαρα\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Σποτ', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 22, humidity: 11 } }\n                                ]\n                            }, \n                            { \n                                name: \"Γραφείο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'DOOR', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'OPEN', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 23, humidity: 10 } }\n                                ]\n                            } \n                        ] \n                    } \n                ],\n                items: [ { name: 'Συναγερμός', domain: 'ALARM', type: 'ALARM', protocol: 'mqtt' } ]\n            },\n            { \n                name: 'Διαμέρισμα Ειρήνης', \n                floors: [ \n                    { \n                        name: '3ος', \n                        rooms: [ \n                            { \n                                name: \"Χωλ\",\n                                items: [\n                                    { name: 'Πόρτα εισόδου', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Εξωτερικό φως εισόδου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 22, humidity: 11 } }\n                                ]\n                            }, \n                            { \n                                name: \"Σαλόνι\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 23, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Τραπεζαρία\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Ρολό παραθύρου', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Πολυέλεος 1/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Πολυέλεος 2/2', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 24, humidity: 11 } }\n                                ]\n                            }, \n                            { \n                                name: \"Καθιστικό\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 20, humidity: 10 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κουζίνα\",\n                                items: [\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 28, humidity: 23 } }\n                                ]\n                            }, \n                            { \n                                name: \"Μπάνιο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'OPEN', recline: 'CLOSED' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 20, humidity: 17 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κρεββατοκάμαρα\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Σίτα παραθύρου', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 24, humidity: 11 } }\n                                ]\n                            } \n                        ] \n                    } \n                ],\n                items: [ { name: 'Συναγερμός', domain: 'ALARM', type: 'ALARM', protocol: 'mqtt' } ] \n            },\n            { name: 'Εξοχικό Αλυκή', floors: [ \n                { name: 'Ισόγειο', rooms: [ { name: 'Κουζίνα' }, { name: 'Σαλόνι' }, { name: 'Μπάνιο' } ] }, \n                { name: '1ος', rooms: [ { name: 'Σαλόνι' }, { name: 'Μπάνιο' }, { name: 'WC' }, { name: 'Κρεββατοκάμαρα' }, { name: 'Κρεββατοκάμαρα παιδιών' }, { name: 'Κρεββατοκάμαρα Αθηνάς' }, { name: 'Κρεββατοκάμαρα δυτική' } ] } \n                ] \n            },\n            { \n                name: 'Silicontech', \n                floors: [ \n                    { \n                        name: '1ος', \n                        rooms: [ \n                            { \n                                name: \"Χωλ\",\n                                items: [\n                                    { name: 'Πόρτα εισόδου', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Εξωτερικό φως εισόδου', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Σποτ', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                ]\n                            }, \n                            { \n                                name: \"Σαλόνι\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1_AUTO', protocol: 'mqtt', state: { main: 'OPEN', percent: 10 } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 27, humidity: 9 } }\n                                ]\n                            }, \n                            { \n                                name: \"Κουζίνα\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Παράθυρο διπλό', domain: 'WINDOW', type: 'WINDOW2R', protocol: 'mqtt', state: { left: 'CLOSED', right: 'CLOSED', recline: 'CLOSED' } },\n                                    { name: 'Παράθυρο μονό', domain: 'WINDOW', type: 'WINDOW1R', protocol: 'mqtt', state: { main: 'CLOSED', recline: 'OPEN' } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'ON' },\n                                    { name: 'Σποτ', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 29, humidity: 36 } }\n                                ]\n                            }, \n                            { \n                                name: \"Μπάνιο\",\n                                items: [\n                                    { name: 'Παράθυρο', domain: 'WINDOW', type: 'WINDOW1', protocol: 'mqtt', state: 'OPEN' },\n                                    { name: 'Φως', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 28, humidity: 35 } }\n                                ]\n                            }, \n                            { \n                                name: \"Γραφείο\",\n                                items: [\n                                    { name: 'Μπαλκονόπορτα', domain: 'DOOR', type: 'DOOR1', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Σίτα μπαλκονόπορτας', domain: 'COVER', type: 'COVER', protocol: 'mqtt', state: 'CLOSED' },\n                                    { name: 'Ρολό μπαλκονόπορτας', domain: 'COVER', type: 'ROLLER1_AUTO', protocol: 'mqtt', state: { main: 'CLOSED', percent: 100 } },\n                                    { name: 'Φως ταβάνι', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Φως μπαλκονιού', domain: 'LIGHT', type: 'LIGHT', protocol: 'mqtt', state: 'OFF' },\n                                    { name: 'Κάμερα', domain: 'CAMERA', type: 'CAMERA', protocol: 'http' },\n                                    { name: 'Θερμοκρασία', domain: 'CLIMATE', type: 'TEMPERATURE_HUMIDITY', protocol: 'mqtt', state: { temperature: 26, humidity: 27 } }\n                                ]\n                            } \n                        ] \n                    } \n                ],\n                items: [ { name: 'Συναγερμός', domain: 'ALARM', type: 'ALARM', protocol: 'mqtt' } ]\n            }\n        ];\n\n        // console.log( vm.houses );\n        vm.isCollapsed = [];        \n        for( var i = 0 ; i < vm.houses.length ; i++ )\n        {            \n            vm.isCollapsed[i] = { \n                house: true,\n                filter: { DOOR: true, WINDOW: true, LIGHT: true, CLIMATE: true, COVER: true, ALARM: true, CAMERA: true },\n                allChildrenExpanded: false, \n                floor: [] \n            };\n            for( var f  = 0 ; f < vm.houses[i].floors.length ; f++ )\n            {\n                vm.isCollapsed[i].floor[f] = { floor: true, room: [] };\n                // console.log( 'House[',i,'].floors[',f,']: ', vm.houses[i].floors[f] );\n                for( var r  = 0 ; r < vm.houses[i].floors[f].rooms.length ; r++ )\n                {\n                    vm.isCollapsed[i].floor[f].room[r] = { room: true };\n                }\n            }\n        }\n\n        vm.expandAllChildren = function( house, expand )\n        {\n            for( var houseIndex = 0 ; houseIndex < vm.houses.length ; houseIndex++ )\n            {\n                if( !angular.equals( vm.houses[houseIndex], house ) )\n                {\n                    continue;\n                }\n                            \n                vm.isCollapsed[ houseIndex ].house = expand;\n                vm.isCollapsed[ houseIndex ].allChildrenExpanded = !expand;\n                for( var f = 0 ; f < vm.houses[houseIndex].floors.length ; f++ )\n                {\n                    vm.isCollapsed[houseIndex].floor[f].floor = expand;\n                    for( var r  = 0 ; r < vm.houses[houseIndex].floors[f].rooms.length ; r++ )\n                    {\n                        vm.isCollapsed[houseIndex].floor[f].room[r].room = expand;\n                    }\n                }\n            }\n        }\n        \n\n        console.log( vm.isCollapsed );\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'room', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    r: '=room',\n                    showLabel: '=',\n                    isCollapsed: '=',\n                    filter: '='\n                },\n                templateUrl: '/app/entities/room/room.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'opening', function()\n        {\n            return {\n                restrict: 'E',\n                scope: { \n                    type: '=',\n                    o: '=opening'\n                },\n                templateUrl: '/app/entities/opening/opening.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemDialogController', MqttItemDialogController);\n\n    MqttItemDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'MqttItem'];\n\n    function MqttItemDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, MqttItem) {\n        var vm = this;\n\n        vm.mqttItem = entity;\n        vm.clear = clear;\n        vm.save = save;\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.mqttItem.id !== null) {\n                MqttItem.update(vm.mqttItem, onSaveSuccess, onSaveError);\n            } else {\n                MqttItem.save(vm.mqttItem, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('eHomeApp:mqttItemUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemDetailController', MqttItemDetailController);\n\n    MqttItemDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'MqttItem'];\n\n    function MqttItemDetailController($scope, $rootScope, $stateParams, previousState, entity, MqttItem) {\n        var vm = this;\n\n        vm.mqttItem = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('eHomeApp:mqttItemUpdate', function(event, result) {\n            vm.mqttItem = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemDeleteController',MqttItemDeleteController);\n\n    MqttItemDeleteController.$inject = ['$uibModalInstance', 'entity', 'MqttItem'];\n\n    function MqttItemDeleteController($uibModalInstance, entity, MqttItem) {\n        var vm = this;\n\n        vm.mqttItem = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            MqttItem.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('mqtt-item', {\n            parent: 'entity',\n            url: '/mqtt-item',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'eHomeApp.mqttItem.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/mqtt-item/mqtt-items.html',\n                    controller: 'MqttItemController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('mqttItem');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('mqtt-item-detail', {\n            parent: 'mqtt-item',\n            url: '/mqtt-item/{id}',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'eHomeApp.mqttItem.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-detail.html',\n                    controller: 'MqttItemDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('mqttItem');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'MqttItem', function($stateParams, MqttItem) {\n                    return MqttItem.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'mqtt-item',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('mqtt-item-detail.edit', {\n            parent: 'mqtt-item-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-dialog.html',\n                    controller: 'MqttItemDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['MqttItem', function(MqttItem) {\n                            return MqttItem.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('mqtt-item.new', {\n            parent: 'mqtt-item',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-dialog.html',\n                    controller: 'MqttItemDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                topic: null,\n                                state: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('mqtt-item', null, { reload: 'mqtt-item' });\n                }, function() {\n                    $state.go('mqtt-item');\n                });\n            }]\n        })\n        .state('mqtt-item.edit', {\n            parent: 'mqtt-item',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-dialog.html',\n                    controller: 'MqttItemDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['MqttItem', function(MqttItem) {\n                            return MqttItem.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('mqtt-item', null, { reload: 'mqtt-item' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('mqtt-item.delete', {\n            parent: 'mqtt-item',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/mqtt-item/mqtt-item-delete-dialog.html',\n                    controller: 'MqttItemDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['MqttItem', function(MqttItem) {\n                            return MqttItem.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('mqtt-item', null, { reload: 'mqtt-item' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('eHomeApp')\n        .factory('MqttItem', MqttItem);\n\n    MqttItem.$inject = ['$resource'];\n\n    function MqttItem ($resource) {\n        var resourceUrl =  'api/mqtt-items/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('MqttItemController', MqttItemController);\n\n    MqttItemController.$inject = ['MqttItem'];\n\n    function MqttItemController(MqttItem) {\n\n        var vm = this;\n\n        vm.mqttItems = [];\n\n        loadAll();\n\n        function loadAll() {\n            MqttItem.query(function(result) {\n                vm.mqttItems = result;\n                vm.searchQuery = null;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'window2r', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/window2r.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'window1r', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/window1r.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'window1', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/window1.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'temphum', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/temphum.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'roller1', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/roller1.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'roller1auto', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/roller1_auto.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'light', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/light.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'door2r', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/door2r.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'door1', function()\n        {\n            return {                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/door1.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'cover', function()\n        {\n            return {                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/cover.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'camera', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/camera.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'alarm', function()\n        {\n            return {\n                \n                restrict: 'E',\n                scope: { \n                    i: '=item'\n                },\n                templateUrl: '/app/entities/items/alarm.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'item', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    i: '=item',\n                    filter: '='\n                },\n                templateUrl: '/app/entities/item/item.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'house', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    h: '=house',\n                    isCollapsed: '=',\n                    expandAllChildren: '&expandAllChildren'\n                },\n                templateUrl: '/app/entities/house/house.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive( 'floor', function()\n        {\n            return {\n                transclude: true,\n                restrict: 'E',\n                scope: { \n                    f: '=floor',\n                    showLabel: '=',\n                    isCollapsed: '=',\n                    filter: '='\n                },\n                templateUrl: '/app/entities/floor/floor.html'\n            };\n        }\n        );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('characters', characters);\n\n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n\n(function(){\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('eHomeApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils($filter) {\n\n        var service = {\n            convertDateTimeFromServer: convertDateTimeFromServer,\n            convertLocalDateFromServer: convertLocalDateFromServer,\n            convertLocalDateToServer: convertLocalDateToServer,\n            dateformat: dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer(date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer(date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer(date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat() {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$uibModal'];\n\n    function LoginService ($uibModal) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open () {\n            if (modalInstance !== null) return;\n            modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.result.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.cancel = cancel;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n        vm.username = null;\n\n        $timeout(function (){angular.element('#username').focus();});\n\n        function cancel () {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function login (event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $uibModalInstance.close();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                    $state.go('home');\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is successful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiLanguageService', JhiLanguageService);\n\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\n\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'ca': 'Català',\n                'cs': 'Český',\n                'da': 'Dansk',\n                'de': 'Deutsch',\n                'el': 'Ελληνικά',\n                'en': 'English',\n                'es': 'Español',\n                'et': 'Eesti',\n                'fr': 'Français',\n                'gl': 'Galego',\n                'hu': 'Magyar',\n                'hi': 'हिंदी',\n                'hy': 'Հայերեն',\n                'it': 'Italiano',\n                'ja': '日本語',\n                'ko': '한국어',\n                'mr': 'मराठी',\n                'nl': 'Nederlands',\n                'pl': 'Polski',\n                'pt-br': 'Português (Brasil)',\n                'pt-pt': 'Português',\n                'ro': 'Română',\n                'ru': 'Русский',\n                'sk': 'Slovenský',\n                'sr': 'Srpski',\n                'sv': 'Svenska',\n                'ta': 'தமிழ்',\n                'th': 'ไทย',\n                'tr': 'Türkçe',\n                'vi': 'Tiếng Việt',\n                'zh-cn': '中文（简体）',\n                'zh-tw': '繁體中文'\n            }[lang];\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiLanguageController', JhiLanguageController);\n\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\n\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n\n        /*\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n         They are written in English to avoid character encoding issues (not a perfect solution)\n         */\n        .constant('LANGUAGES', [\n            'en',\n            'el'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('eHomeApp')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key, data) {\n            key = key ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('eHomeApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var headers = Object.keys(httpResponse.headers()).filter(function (header) {\n                    return header.indexOf('app-error', header.length - 'app-error'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n                }).sort();\n                var errorHeader = httpResponse.headers(headers[0]);\n                var entityKey = httpResponse.headers(headers[1]);\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('eHomeApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService () {\n        this.toast = false;\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        this.showAsToast = function(isToast) {\n            this.toast = isToast;\n        };\n\n        getService.$inject = ['$timeout', '$sce', '$translate'];\n\n        function getService ($timeout, $sce,$translate) {\n            var toast = this.toast,\n                alertId = 0, // unique id for each alert. Starts from 0.\n                alerts = [],\n                timeout = 5000; // default timeout\n\n            return {\n                factory: factory,\n                isToast: isToast,\n                add: addAlert,\n                closeAlert: closeAlert,\n                closeAlertByIndex: closeAlertByIndex,\n                clear: clear,\n                get: get,\n                success: success,\n                error: error,\n                info: info,\n                warning : warning\n            };\n\n            function isToast() {\n                return toast;\n            }\n\n            function clear() {\n                alerts = [];\n            }\n\n            function get() {\n                return alerts;\n            }\n\n            function success(msg, params, position) {\n                return this.add({\n                    type: 'success',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function error(msg, params, position) {\n                return this.add({\n                    type: 'danger',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function warning(msg, params, position) {\n                return this.add({\n                    type: 'warning',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function info(msg, params, position) {\n                return this.add({\n                    type: 'info',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function factory(alertOptions) {\n                var alert = {\n                    type: alertOptions.type,\n                    msg: $sce.trustAsHtml(alertOptions.msg),\n                    id: alertOptions.alertId,\n                    timeout: alertOptions.timeout,\n                    toast: alertOptions.toast,\n                    position: alertOptions.position ? alertOptions.position : 'top right',\n                    scoped: alertOptions.scoped,\n                    close: function (alerts) {\n                        return closeAlert(this.id, alerts);\n                    }\n                };\n                if(!alert.scoped) {\n                    alerts.push(alert);\n                }\n                return alert;\n            }\n\n            function addAlert(alertOptions, extAlerts) {\n                alertOptions.alertId = alertId++;\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n                var that = this;\n                var alert = this.factory(alertOptions);\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\n                    $timeout(function () {\n                        that.closeAlert(alertOptions.alertId, extAlerts);\n                    }, alertOptions.timeout);\n                }\n                return alert;\n            }\n\n            function closeAlert(id, extAlerts) {\n                var thisAlerts = extAlerts ? extAlerts : alerts;\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\n            }\n\n            function closeAlertByIndex(index, thisAlerts) {\n                return thisAlerts.splice(index, 1);\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiAlert = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertController\n    };\n\n    angular\n        .module('eHomeApp')\n        .component('jhiAlert', jhiAlert);\n\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\n\n    function jhiAlertController($scope, AlertService) {\n        var vm = this;\n\n        vm.alerts = AlertService.get();\n        $scope.$on('$destroy', function () {\n            vm.alerts = [];\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('notificationInterceptor', notificationInterceptor);\n\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\n\n    function notificationInterceptor ($q, AlertService) {\n        var service = {\n            response: response\n        };\n\n        return service;\n\n        function response (response) {\n            var headers = Object.keys(response.headers()).filter(function (header) {\n                return header.indexOf('app-alert', header.length - 'app-alert'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n            }).sort();\n            var alertKey = response.headers(headers[0]);\n            if (angular.isString(alertKey)) {\n                AlertService.success(alertKey, { param : response.headers(headers[1])});\n            }\n            return response;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('eHomeApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    function authExpiredInterceptor(){\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            // // If we have an unauthorized request we redirect to the login page\n            // // Don't do this check on the account API to avoid infinite loop\n            // if (response.status === 401 && angular.isDefined(response.data.path) && response.data.path.indexOf('/api/account') === -1) {\n            //     var Auth = $injector.get('Auth');\n            //     var to = $rootScope.toState;\n            //     var params = $rootScope.toStateParams;\n            //     Auth.logout();\n            //     if (to.name !== 'accessdenied') {\n            //         Auth.storePreviousState(to.name, params);\n            //     }\n            //     var LoginService = $injector.get('LoginService');\n            //     LoginService.open();\n            // }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        // update the window title using params in the following\n        // precedence\n        // 1. titleKey parameter\n        // 2. $state.$current.data.pageTitle (current state page title)\n        // 3. 'global.title'\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window', 'VERSION'];\n        // 'Auth', 'Principal'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window, VERSION)\n        // Auth, Principal) \n        {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                // if (Principal.isIdentityResolved()) {\n                //     Auth.authorize();\n                // }\n\n                // Update the language\n                JhiLanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"en\"');\n                $cookies.putObject(name, 'en');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('en');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        // $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('notificationInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        // disable debug data on prod profile to improve performance\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n\n        /*\n        If you wish to debug an application with this information\n        then you should open up a debug console in the browser\n        then call this method directly in this console:\n\n\t\tangular.reloadWithDebugInfo();\n\t\t*/\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(alertServiceConfig);\n\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\n\n    function alertServiceConfig(AlertServiceProvider) {\n        // set below to true to make alerts look like toast\n        AlertServiceProvider.showAsToast(false);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'navbar@': {\n                    templateUrl: 'app/layouts/navbar/navbar.html',\n                    controller: 'NavbarController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                // authorize: ['Auth',\n                //     function (Auth) {\n                //         return Auth.authorize();\n                //     }\n                // ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('eHomeApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementDialogController',UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\n\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.clear = clear;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function onSaveSuccess (result) {\n            vm.isSaving = false;\n            $uibModalInstance.close(result);\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                User.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\n\n    function UserManagementDetailController($stateParams, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n\n        vm.load($stateParams.login);\n\n        function load(login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\n\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\n\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\n        var vm = this;\n\n        vm.user = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (login) {\n            User.delete({login: login},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('user-management', {\n            parent: 'admin',\n            url: '/user-management?page&sort',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'userManagement.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management.html',\n                    controller: 'UserManagementController',\n                    controllerAs: 'vm'\n                }\n            },            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                }\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort)\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n\n            }        })\n        .state('user-management.new', {\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                id: null, login: null, firstName: null, lastName: null, email: null,\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                                resetKey: null, authorities: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('user-management');\n                });\n            }]\n        })\n        .state('user-management.edit', {\n            url: '/{login}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('user-management-detail', {\n            parent: 'user-management',\n            url: '/{login}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'user-management.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\n                    controller: 'UserManagementDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('user-management.delete', {\n            url: '/{login}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\n                    controller: 'UserManagementDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'pagingParams', 'paginationConstants', 'JhiLanguageService'];\n\n    function UserManagementController(Principal, User, ParseLinks, AlertService, $state, pagingParams, paginationConstants, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.languages = null;\n        vm.loadAll = loadAll;\n        vm.setActive = setActive;\n        vm.users = [];\n        vm.page = 1;\n        vm.totalItems = null;\n        vm.clear = clear;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.transition = transition;\n\n        vm.loadAll();\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n        Principal.identity().then(function(account) {\n            vm.currentAccount = account;\n        });\n\n        function setActive (user, isActivated) {\n            user.activated = isActivated;\n            User.update(user, function () {\n                vm.loadAll();\n                vm.clear();\n            });\n        }\n\n        function loadAll () {\n            User.query({\n                page: pagingParams.page - 1,\n                size: vm.itemsPerPage,\n                sort: sort()\n            }, onSuccess, onError);\n        }\n\n        function onSuccess(data, headers) {\n            vm.links = ParseLinks.parse(headers('link'));\n            vm.totalItems = headers('X-Total-Count');\n            vm.queryCount = vm.totalItems;\n            vm.page = pagingParams.page;\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n        function clear () {\n            vm.user = {\n                id: null, login: null, firstName: null, lastName: null, email: null,\n                activated: null, langKey: null, createdBy: null, createdDate: null,\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                resetKey: null, authorities: null\n            };\n        }\n\n        function sort () {\n            var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n            if (vm.predicate !== 'id') {\n                result.push('id');\n            }\n            return result;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'JhiMetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiMetricsService', JhiMetricsService);\n\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\n\n    function JhiMetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\n\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\n\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.getLabelClass = getLabelClass;\n        vm.threadDump = threadDump;\n        vm.threadDumpAll = 0;\n        vm.threadDumpBlocked = 0;\n        vm.threadDumpRunnable = 0;\n        vm.threadDumpTimedWaiting = 0;\n        vm.threadDumpWaiting = 0;\n\n        angular.forEach(threadDump, function(value) {\n            if (value.threadState === 'RUNNABLE') {\n                vm.threadDumpRunnable += 1;\n            } else if (value.threadState === 'WAITING') {\n                vm.threadDumpWaiting += 1;\n            } else if (value.threadState === 'TIMED_WAITING') {\n                vm.threadDumpTimedWaiting += 1;\n            } else if (value.threadState === 'BLOCKED') {\n                vm.threadDumpBlocked += 1;\n            }\n        });\n\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\n\n        function cancel () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function getLabelClass (threadState) {\n            if (threadState === 'RUNNABLE') {\n                return 'label-success';\n            } else if (threadState === 'WAITING') {\n                return 'label-info';\n            } else if (threadState === 'TIMED_WAITING') {\n                return 'label-warning';\n            } else if (threadState === 'BLOCKED') {\n                return 'label-danger';\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\n\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\n\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\n        var vm = this;\n\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.refreshThreadDumpData = refreshThreadDumpData;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n            });\n\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            JhiMetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n        function refreshThreadDumpData () {\n            JhiMetricsService.threadDump().then(function(data) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\n                    controller: 'JhiMetricsMonitoringModalController',\n                    controllerAs: 'vm',\n                    size: 'lg',\n                    resolve: {\n                        threadDump: function() {\n                            return data;\n                        }\n\n                    }\n                });\n            });\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'JhiHealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiHealthService', JhiHealthService);\n\n    JhiHealthService.$inject = ['$rootScope', '$http'];\n\n    function JhiHealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('eHomeApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $uibModalInstance.dismiss('cancel');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\n\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\n\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = JhiHealthService.getBaseName;\n        vm.subSystemName = JhiHealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass (statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh () {\n            vm.updatingHealth = true;\n            JhiHealthService.checkHealth().then(function (response) {\n                vm.healthData = JhiHealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth (health) {\n            $uibModal.open({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                size: 'lg',\n                resolve: {\n                    currentHealth: function() {\n                        return health;\n                    },\n                    baseName: function() {\n                        return vm.baseName;\n                    },\n                    subSystemName: function() {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'JhiConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('JhiConfigurationService', JhiConfigurationService);\n\n    JhiConfigurationService.$inject = ['$filter', '$http'];\n\n    function JhiConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('JhiConfigurationController', JhiConfigurationController);\n\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\n\n    function JhiConfigurationController (filter,JhiConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        JhiConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        JhiConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n\n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\n\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\n        var vm = this;\n\n        vm.error = null;\n        vm.save = save;\n        vm.settingsAccount = null;\n        vm.success = null;\n\n        /**\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\n         */\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                vm.error = null;\n                vm.success = 'OK';\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                JhiLanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['$timeout', 'Auth'];\n\n    function RequestResetController ($timeout, Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#email').focus();});\n\n        function requestReset () {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'email address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\n\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#password').focus();});\n\n        function finishReset() {\n            vm.doNotMatch = null;\n            vm.error = null;\n            if (vm.resetAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService'];\n\n    function RegisterController ($translate, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#login').focus();});\n\n        function register () {\n            if (vm.registerAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.registerAccount.langKey = $translate.use();\n                vm.doNotMatch = null;\n                vm.error = null;\n                vm.errorUserExists = null;\n                vm.errorEmailExists = null;\n\n                Auth.createAccount(vm.registerAccount).then(function () {\n                    vm.success = 'OK';\n                }).catch(function (response) {\n                    vm.success = null;\n                    if (response.status === 400 && response.data === 'login already in use') {\n                        vm.errorUserExists = 'ERROR';\n                    } else if (response.status === 400 && response.data === 'email address already in use') {\n                        vm.errorEmailExists = 'ERROR';\n                    } else {\n                        vm.error = 'ERROR';\n                    }\n                });\n            }\n        }\n    }\n})();\n\n/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penalty (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penalty (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal'];\n\n    function PasswordController (Auth, Principal) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.success = null;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            if (vm.password !== vm.confirmPassword) {\n                vm.error = null;\n                vm.success = null;\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.doNotMatch = null;\n                Auth.changePassword(vm.password).then(function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('eHomeApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n(function(){angular.module('eHomeApp').run(['$templateCache', function($templateCache) {$templateCache.put('app/home/home.html','<div ng-cloak><!--<div class=\"row\">\\n        <div class=\"col-md-4\">\\n            <span class=\"hipster img-responsive img-rounded\"></span>\\n        </div>\\n        <div class=\"col-md-8\">\\n            <h1 data-translate=\"home.title\">Welcome, Java Hipster!</h1>\\n            <p class=\"lead\" data-translate=\"home.subtitle\">This is your homepage</p>\\n\\n            <div>\\n\\n            </div>\\n\\n        </div>\\n    </div>--><div ng-repeat=\"h in vm.houses\" ng-init=\"houseIndex = $index\"><div class=\"well\"><house house=\"h\" is-collapsed=\"vm.isCollapsed[houseIndex]\" expand-all-children=\"vm.expandAllChildren( house, expand )\"><!--<label class=\"house\">{{h.name}}</label>\\n            <button type=\"button\" class=\"btn btn-link btn-xs\" ng-click=\"vm.isCollapsed[$index].house = !vm.isCollapsed[$index].house\">\\n                <span class=\"glyphicon glyphicon-chevron-down\" ng-if=\"vm.isCollapsed[$index].house\"></span>\\n                <span class=\"glyphicon glyphicon-chevron-up\" ng-if=\"!vm.isCollapsed[$index].house\"></span>\\n            </button>        \\n            <span class=\"summary\" ng-if=\"h.floors.length == 1\">({{h.floors[0].name}})</span>    \\n            <div uib-collapse=\"vm.isCollapsed[$index].house\">\\n                <div ng-repeat=\"f in h.floors\">\\n                    <div>                        \\n                        <div ng-if=\"h.floors.length > 1\">\\n                            <label class=\"floor\">{{f.name}}</label>\\n                            <button type=\"button\" class=\"btn btn-link btn-xs\" ng-click=\"vm.isCollapsed[houseIndex].floor[$index] = !vm.isCollapsed[houseIndex].floor[$index]\">\\n                                <span class=\"glyphicon glyphicon-chevron-down\" ng-if=\"vm.isCollapsed[houseIndex].floor[$index]\"></span>\\n                                <span class=\"glyphicon glyphicon-chevron-up\" ng-if=\"!vm.isCollapsed[houseIndex].floor[$index]\"></span>\\n                            </button>            \\n                        </div>\\n                        <div uib-collapse=\"vm.isCollapsed[houseIndex].floor[$index]\">\\n                            <div ng-repeat=\"r in f.rooms\">\\n                                <div>\\n                                    <label class=\"room\">{{r.name}}</label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>--></div></div></div>');\n$templateCache.put('app/account/activate/activate.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"activate.title\">Activation</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"activate.messages.success\" translate-compile><strong>Your user has been activated.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"activate.messages.error\"><strong>Your user could not be activated.</strong> Please use the registration form to sign up.</div></div></div></div>');\n$templateCache.put('app/account/password/password.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"password.title\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">Password for [<b>{{vm.account.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"password.messages.success\"><strong>Password changed!</strong></div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"password.messages.error\"><strong>An error has occurred!</strong> The password could not be changed.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.changePassword()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"password.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/account/register/register.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"register.title\">Registration</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"register.messages.success\"><strong>Registration saved!</strong> Please check your email for confirmation.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"register.messages.error.fail\"><strong>Registration failed!</strong> Please try again later.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorUserExists\" data-translate=\"register.messages.error.userexists\"><strong>Login name already registered!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorEmailExists\" data-translate=\"register.messages.error.emailexists\"><strong>Email is already in use!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div></div><div class=\"col-md-8 col-md-offset-2\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.register()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"login\" data-translate=\"global.form.username\">Username</label><input type=\"text\" class=\"form-control\" id=\"login\" name=\"login\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.login\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\" required><div ng-show=\"form.login.$dirty && form.login.$invalid\"><p class=\"help-block\" ng-show=\"form.login.$error.required\" data-translate=\"register.messages.validate.login.required\">Your username is required.</p><p class=\"help-block\" ng-show=\"form.login.$error.minlength\" data-translate=\"register.messages.validate.login.minlength\">Your username is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.login.$error.maxlength\" data-translate=\"register.messages.validate.login.maxlength\">Your username cannot be longer than 50 characters.</p><p class=\"help-block\" ng-show=\"form.login.$error.pattern\" data-translate=\"register.messages.validate.login.pattern\">Your username can only contain lower-case letters and digits.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.registerAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"register.form.button\">Register</button></form><p></p><div class=\"alert alert-warning\" data-translate=\"global.messages.info.authenticated\" translate-compile>If you want to <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>, you can try the default accounts:<br>- Administrator (login=\"admin\" and password=\"admin\")<br>- User (login=\"user\" and password=\"user\").</div></div></div></div>');\n$templateCache.put('app/account/settings/settings.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"settings.title\" translate-values=\"{username: \\'{{vm.settingsAccount.login}}\\'}\">User settings for [<b>{{vm.settingsAccount.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"settings.messages.success\"><strong>Settings saved!</strong></div><jhi-alert-error></jhi-alert-error><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"firstName\" data-translate=\"settings.form.firstname\">First Name</label><input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"{{\\'settings.form.firstname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.firstName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.firstName.$dirty && form.firstName.$invalid\"><p class=\"help-block\" ng-show=\"form.firstName.$error.required\" data-translate=\"settings.messages.validate.firstname.required\">Your first name is required.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.minlength\" data-translate=\"settings.messages.validate.firstname.minlength\">Your first name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.maxlength\" data-translate=\"settings.messages.validate.firstname.maxlength\">Your first name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"lastName\" data-translate=\"settings.form.lastname\">Last Name</label><input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"{{\\'settings.form.lastname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.lastName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.lastName.$dirty && form.lastName.$invalid\"><p class=\"help-block\" ng-show=\"form.lastName.$error.required\" data-translate=\"settings.messages.validate.lastname.required\">Your last name is required.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.minlength\" data-translate=\"settings.messages.validate.lastname.minlength\">Your last name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.maxlength\" data-translate=\"settings.messages.validate.lastname.maxlength\">Your last name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required maxlength=\"100\"><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label for=\"langKey\" data-translate=\"settings.form.language\">Language</label><select id=\"langKey\" name=\"langKey\" class=\"form-control\" ng-model=\"vm.settingsAccount.langKey\" ng-controller=\"JhiLanguageController as languageVm\" ng-options=\"code as (code | findLanguageFromKey) for code in languageVm.languages\"></select></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"settings.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/admin/audits/audits.html','<div><h2 data-translate=\"audits.title\">Audits</h2><div class=\"row\"><div class=\"col-md-5\"><h4 data-translate=\"audits.filter.title\">Filter by date</h4><p class=\"input-group\"><span class=\"input-group-addon\" data-translate=\"audits.filter.from\">from</span> <input type=\"date\" class=\"input-sm form-control\" name=\"start\" ng-model=\"vm.fromDate\" ng-change=\"vm.onChangeDate()\" required> <span class=\"input-group-addon\" data-translate=\"audits.filter.to\">to</span> <input type=\"date\" class=\"input-sm form-control\" name=\"end\" ng-model=\"vm.toDate\" ng-change=\"vm.onChangeDate()\" required></p></div></div><table class=\"table table-condensed table-striped table-bordered table-responsive\"><thead><tr><th ng-click=\"predicate = \\'timestamp\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.date\">Date</span></th><th ng-click=\"predicate = \\'principal\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.principal\">User</span></th><th ng-click=\"predicate = \\'type\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.status\">State</span></th><th ng-click=\"predicate = \\'data.message\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.data\">Extra data</span></th></tr></thead><tr ng-repeat=\"audit in vm.audits | filter:filter | orderBy:predicate:reverse\" ng-hide=\"audit.filtered\"><td><span>{{audit.timestamp| date:\\'medium\\'}}</span></td><td><small>{{audit.principal}}</small></td><td>{{audit.type}}</td><td><span ng-show=\"audit.data.message\">{{audit.data.message}}</span> <span ng-show=\"audit.data.remoteAddress\"><span data-translate=\"audits.table.data.remoteAddress\">Remote Address</span> {{audit.data.remoteAddress}}</span></td></tr></table><div class=\"text-center\"><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.loadPage(vm.page)\"></uib-pagination></div></div>');\n$templateCache.put('app/admin/configuration/configuration.html','<div><h2 data-translate=\"configuration.title\">Configuration</h2><span data-translate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><label ng-hide=\"filteredConfig.length == 0\">Spring configuration</label><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filteredConfig.length == 0\"><thead><tr><th ng-click=\"predicate = \\'prefix\\'; reverse=!reverse\" class=\"col-sm-4\"><span data-translate=\"configuration.table.prefix\">Prefix</span></th><th data-translate=\"configuration.table.properties\" class=\"col-sm-8\">Properties</th></tr></thead><tr ng-repeat=\"entry in filtered = (vm.configuration | filter:filter | orderBy:predicate:reverse)\"><td><span>{{entry.prefix}}</span></td><td><div class=\"row\" ng-repeat=\"(key, value) in entry.properties\"><div class=\"col-md-4\">{{key}}</div><div class=\"col-md-8\"><span class=\"pull-right label label-default break\">{{value}}</span></div></div></td></tr></table><div ng-repeat=\"(key, value) in vm.allConfiguration\"><label ng-hide=\"filtered.length == 0\"><span>{{key}}</span></label><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filtered.length == 0\"><thead><tr><th class=\"col-sm-4\">Property</th><th class=\"col-sm-8\">Value</th></tr></thead><tbody><tr ng-repeat=\"item in filtered = (value | filter:filter)\"><td class=\"break\">{{item.key}}</td><td class=\"break\"><span class=\"pull-right label label-default break\">{{item.val}}</span></td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/docs/docs.html','<iframe src=\"swagger-ui/index.html\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" width=\"100%\" height=\"900\" scrolling=\"auto\" target=\"_top\" title=\"Swagger UI\"></iframe>');\n$templateCache.put('app/admin/health/health.html','<div><h2 data-translate=\"health.title\">Health Checks</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"health.refresh.button\">Refresh</span></button></p><table id=\"healthCheck\" class=\"table table-striped\"><thead><tr><th class=\"col-md-7\" data-translate=\"health.table.service\">Service Name</th><th class=\"col-md-2 text-center\" data-translate=\"health.table.status\">Status</th><th class=\"col-md-2 text-center\" data-translate=\"health.details.details\">Details</th></tr></thead><tbody><tr ng-repeat=\"health in vm.healthData\"><td>{{\\'health.indicator.\\' + vm.baseName(health.name) | translate}} {{vm.subSystemName(health.name)}}</td><td class=\"text-center\"><span class=\"label\" ng-class=\"vm.getLabelClass(health.status)\">{{\\'health.status.\\' + health.status | translate}}</span></td><td class=\"text-center\"><a class=\"hand\" ng-click=\"vm.showHealth(health)\" ng-show=\"health.details || health.error\"><i class=\"glyphicon glyphicon-eye-open\"></i></a></td></tr></tbody></table></div>');\n$templateCache.put('app/admin/health/health.modal.html','<div class=\"modal-header\"><button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" ng-click=\"vm.cancel()\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"showHealthLabel\">{{\\'health.indicator.\\' + vm.baseName(vm.currentHealth.name) | translate}} {{vm.subSystemName(vm.currentHealth.name)}}</h4></div><div class=\"modal-body pad\"><div ng-show=\"vm.currentHealth.details\"><h4 data-translate=\"health.details.properties\">Properties</h4><table class=\"table table-striped\"><thead><tr><th class=\"col-md-6 text-left\" data-translate=\"health.details.name\">Name</th><th class=\"col-md-6 text-left\" data-translate=\"health.details.value\">Value</th></tr></thead><tbody><tr ng-repeat=\"(k,v) in vm.currentHealth.details\"><td class=\"col-md-6 text-left\">{{k}}</td><td class=\"col-md-6 text-left\">{{v}}</td></tr></tbody></table></div><div ng-show=\"vm.currentHealth.error\"><h4 data-translate=\"health.details.error\">Error</h4><pre>{{vm.currentHealth.error}}</pre></div></div><div class=\"modal-footer\"><button data-dismiss=\"modal\" class=\"btn btn-default pull-left\" type=\"button\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/logs/logs.html','<div class=\"table-responsive\"><h2 data-translate=\"logs.title\">Logs</h2><p data-translate=\"logs.nbloggers\" translate-values=\"{total: \\'{{ vm.loggers.length }}\\'}\">There are {{ vm.loggers.length }} loggers.</p><span data-translate=\"logs.filter\">Filter</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><table class=\"table table-condensed table-striped table-bordered\"><thead><tr title=\"click to order\"><th ng-click=\"predicate = \\'name\\'; reverse=!reverse\"><span data-translate=\"logs.table.name\">Name</span></th><th ng-click=\"predicate = \\'level\\'; reverse=!reverse\"><span data-translate=\"logs.table.level\">Level</span></th></tr></thead><tr ng-repeat=\"logger in vm.loggers | filter:filter | orderBy:predicate:reverse\"><td><small>{{logger.name | characters:140}}</small></td><td><button ng-click=\"vm.changeLevel(logger.name, \\'TRACE\\')\" ng-class=\"(logger.level==\\'TRACE\\') ? \\'btn-danger\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">TRACE</button> <button ng-click=\"vm.changeLevel(logger.name, \\'DEBUG\\')\" ng-class=\"(logger.level==\\'DEBUG\\') ? \\'btn-warning\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">DEBUG</button> <button ng-click=\"vm.changeLevel(logger.name, \\'INFO\\')\" ng-class=\"(logger.level==\\'INFO\\') ? \\'btn-info\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">INFO</button> <button ng-click=\"vm.changeLevel(logger.name, \\'WARN\\')\" ng-class=\"(logger.level==\\'WARN\\') ? \\'btn-success\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">WARN</button> <button ng-click=\"vm.changeLevel(logger.name, \\'ERROR\\')\" ng-class=\"(logger.level==\\'ERROR\\') ? \\'btn-primary\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">ERROR</button></td></tr></table></div>');\n$templateCache.put('app/admin/metrics/metrics.html','<div><h2 data-translate=\"metrics.title\">Application Metrics</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"metrics.refresh.button\">Refresh</span></button></p><h3 data-translate=\"metrics.jvm.title\">JVM Metrics</h3><div class=\"row\" ng-hide=\"vm.updatingMetrics\"><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.memory.title\">Memory</b><p><span data-translate=\"metrics.jvm.memory.total\">Total Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.total.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.total.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.total.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.total.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{vm.metrics.gauges[\\'jvm.threads.count\\'].value}}) <a class=\"hand\" ng-click=\"vm.refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"glyphicon glyphicon-eye-open\"></i></a><p><span data-translate=\"metrics.jvm.threads.runnable\">Runnable</span> {{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value}}</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.gc.title\">Garbage collections</b><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.time\\'].value}}ms</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengecount\">Scavenge count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengetime\">Scavenge time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.time\\'].value}}ms</div></div></div></div><div class=\"well well-lg\" ng-show=\"vm.updatingMetrics\" data-translate=\"metrics.updating\">Updating...</div><h3 data-translate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3><p><span data-translate=\"metrics.jvm.http.active\">Active requests</span> <b>{{vm.metrics.counters[\\'com.codahale.metrics.servlet.InstrumentedFilter.activeRequests\\'].count | number:0}}</b> - <span data-translate=\"metrics.jvm.http.total\">Total requests</span> <b>{{vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}</b></p><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.jvm.http.table.code\">Code</th><th data-translate=\"metrics.jvm.http.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.http.table.mean\">Mean</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th></tr></thead><tbody><tr><td data-translate=\"metrics.jvm.http.code.ok\">OK</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.notfound\">Not Found</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.servererror\">Server error</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m15_rate | number:2}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.servicesstats.title\">Services statistics (time in millisecond)</h3><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.servicesstats.table.name\">Service name</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.max\">Max</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.servicesStats\"><td>{{k}}</td><td class=\"text-right\">{{v.count}}</td><td class=\"text-right\">{{v.mean * 1000 | number:0}}</td><td class=\"text-right\">{{v.min * 1000 | number:0}}</td><td class=\"text-right\">{{v.p50 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p75 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p95 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p99 * 1000 | number:0}}</td><td class=\"text-right\">{{v.max * 1000 | number:0}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.datasource.title\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\">DataSource statistics (time in millisecond)</h3><div class=\"table-responsive\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\"><table class=\"table table-striped\"><thead><tr><th><span data-translate=\"metrics.datasource.usage\">Usage</span> ({{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value}} / {{vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value}})</th><th class=\"text-right\" data-translate=\"metrics.datasource.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.datasource.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.datasource.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.datasource.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.datasource.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.datasource.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.datasource.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.datasource.max\">Max</th></tr></thead><tbody><tr><td><div class=\"progress progress-striped\"><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value\" value=\"vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value * 100 / vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value | number:0}}%</span></uib-progressbar></div></td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].count}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].mean | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].min | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p50 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p75 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p95 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p99 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].max | number:2}}</td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/metrics/metrics.modal.html','<!-- Modal used to display the threads dump --><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"metrics.jvm.threads.dump.title\">Threads dump</h4></div><div class=\"modal-body pad\"><span class=\"label label-primary\" ng-click=\"threadDumpFilter = {}\">All&nbsp;<span class=\"badge\">{{vm.threadDumpAll}}</span></span>&nbsp; <span class=\"label label-success\" ng-click=\"threadDumpFilter = {threadState: \\'RUNNABLE\\'}\">Runnable&nbsp;<span class=\"badge\">{{vm.threadDumpRunnable}}</span></span>&nbsp; <span class=\"label label-info\" ng-click=\"threadDumpFilter = {threadState: \\'WAITING\\'}\">Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpWaiting}}</span></span>&nbsp; <span class=\"label label-warning\" ng-click=\"threadDumpFilter = {threadState: \\'TIMED_WAITING\\'}\">Timed Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpTimedWaiting}}</span></span>&nbsp; <span class=\"label label-danger\" ng-click=\"threadDumpFilter = {threadState: \\'BLOCKED\\'}\">Blocked&nbsp;<span class=\"badge\">{{vm.threadDumpBlocked}}</span></span>&nbsp;<div class=\"voffset2\">&nbsp;</div>Filter <input type=\"text\" ng-model=\"threadDumpFilter\" class=\"form-control\"><div class=\"row pad\" ng-repeat=\"(k, v) in vm.threadDump | filter:threadDumpFilter\"><h5><span class=\"label\" ng-class=\"vm.getLabelClass(v.threadState)\">{{v.threadState}}</span>&nbsp;{{v.threadName}} (ID {{v.threadId}}) <a ng-click=\"show = !show\"><span ng-show=\"!show\" data-translate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span> <span ng-show=\"show\" data-translate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span></a></h5><div class=\"well\" ng-show=\"show\"><div ng-repeat=\"(stK, stV) in v.stackTrace\">{{stV.className}}.{{stV.methodName}}({{stV.fileName}}:{{stV.lineNumber}}) <span class=\"voffset1\"></span></div></div><table class=\"table table-condensed\"><thead><tr><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th><th data-translate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th></tr></thead><tbody><tr><td>{{v.blockedTime}}</td><td>{{v.blockedCount}}</td><td>{{v.waitedTime}}</td><td>{{v.waitedCount}}</td><td>{{v.lockName}}</td></tr></tbody></table></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default pull-left\" data-dismiss=\"modal\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/user-management/user-management-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.user.login)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"userManagement.delete.question\" translate-values=\"{login: \\'{{vm.user.login}}\\'}\">Are you sure you want to delete this User?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management-detail.html','<div><h2><span data-translate=\"userManagement.detail.title\">User</span> [<b>{{vm.user.login}}</b>]</h2><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"userManagement.login\">Login</span></dt><dd><span>{{vm.user.login}}</span> <span class=\"label label-danger\" ng-show=\"!vm.user.activated\" data-translate=\"userManagement.deactivated\">Deactivated</span> <span class=\"label label-success\" ng-show=\"vm.user.activated\" data-translate=\"userManagement.activated\">Activated</span></dd><dt><span data-translate=\"userManagement.firstName\">First Name</span></dt><dd>{{vm.user.firstName}}</dd><dt><span data-translate=\"userManagement.lastName\">Last Name</span></dt><dd>{{vm.user.lastName}}</dd><dt><span data-translate=\"userManagement.email\">Email</span></dt><dd>{{vm.user.email}}</dd><dt><span data-translate=\"userManagement.langKey\">Lang Key</span></dt><dd>{{vm.user.langKey}}</dd><dt><span data-translate=\"userManagement.createdBy\">Created By</span></dt><dd>{{vm.user.createdBy}}</dd><dt><span data-translate=\"userManagement.createdDate\">Created Date</span></dt><dd>{{vm.user.createdDate | date:\\'dd/MM/yy HH:mm\\' }}</dd><dt><span data-translate=\"userManagement.lastModifiedBy\">Last Modified By</span></dt><dd>{{vm.user.lastModifiedBy}}</dd><dt><span data-translate=\"userManagement.lastModifiedDate\">Last Modified Date</span></dt><dd>{{vm.user.lastModifiedDate | date:\\'dd/MM/yy HH:mm\\'}}</dd><dt><span data-translate=\"userManagement.profiles\">Profiles</span></dt><dd><ul class=\"list-unstyled\"><li ng-repeat=\"authority in vm.user.authorities\"><span class=\"label label-info\">{{authority}}</span></li></ul></dd></dl><button type=\"submit\" ui-sref=\"user-management\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button></div>');\n$templateCache.put('app/admin/user-management/user-management-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myUserLabel\" data-translate=\"userManagement.home.createOrEditLabel\">Create or edit a User</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\"><label data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" name=\"id\" ng-model=\"vm.user.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.login\">Login</label><input type=\"text\" class=\"form-control\" name=\"login\" ng-model=\"vm.user.login\" ng-required=\"vm.user.id == null\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\"><div ng-show=\"editForm.login.$invalid\"><p class=\"help-block\" ng-show=\"editForm.login.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.login.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.firstName\">First Name</label><input type=\"text\" class=\"form-control\" name=\"firstName\" ng-model=\"vm.user.firstName\" ng-maxlength=\"50\"><div ng-show=\"editForm.firstName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.firstName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label data-translate=\"userManagement.lastName\">Last Name</label><input type=\"text\" class=\"form-control\" name=\"lastName\" ng-model=\"vm.user.lastName\" ng-maxlength=\"50\"><div ng-show=\"editForm.lastName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.lastName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.email\">Email</label><input type=\"email\" class=\"form-control\" name=\"email\" ng-model=\"vm.user.email\" required ng-maxlength=\"100\"><div ng-show=\"editForm.email.$invalid\"><p class=\"help-block\" ng-show=\"editForm.email.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"100\">This field cannot be longer than 100 characters.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p></div></div><div class=\"form-group\"><label for=\"activated\"><input ng-disabled=\"vm.user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" ng-model=\"vm.user.activated\"> <span data-translate=\"userManagement.activated\">Activated</span></label></div><div class=\"form-group\"><label data-translate=\"userManagement.langKey\">Lang Key</label><select class=\"form-control\" name=\"langKey\" ng-model=\"vm.user.langKey\" ng-options=\"language as language for language in vm.languages track by language\"></select></div><div class=\"form-group\"><label data-translate=\"userManagement.profiles\">Profiles</label><select class=\"form-control\" multiple=\"multiple\" name=\"authority\" ng-model=\"vm.user.authorities\" ng-options=\"authority for authority in vm.authorities\"></select></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management.html','<div><h2 data-translate=\"userManagement.home.title\">Users</h2><jhi-alert></jhi-alert><div class=\"row\"><div class=\"col-md-4\"><button class=\"btn btn-primary\" ui-sref=\"user-management.new\"><span class=\"glyphicon glyphicon-flash\"></span> <span data-translate=\"userManagement.home.createLabel\">Create a new User</span></button></div></div><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.transition()\"><th jh-sort-by=\"id\"><span data-translate=\"global.field.id\">ID</span><span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"login\"><span data-translate=\"userManagement.login\">Login</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"email\"><span data-translate=\"userManagement.email\">Email</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th><th jh-sort-by=\"langKey\"><span data-translate=\"userManagement.langKey\">Lang Key</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th><span data-translate=\"userManagement.profiles\">Profiles</span></th><th jh-sort-by=\"createdDate\"><span data-translate=\"userManagement.createdDate\">Created Date</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lastModifiedBy\"><span data-translate=\"userManagement.lastModifiedBy\">Last Modified By</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lastModifiedDate\"><span data-translate=\"userManagement.lastModifiedDate\">Last Modified Date</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr ng-repeat=\"user in vm.users track by user.id\"><td><a ui-sref=\"user-management-detail({login:user.login})\">{{user.id}}</a></td><td>{{user.login}}</td><td>{{user.email}}</td><td><button class=\"btn btn-danger btn-xs\" ng-click=\"vm.setActive(user, true)\" ng-show=\"!user.activated\" data-translate=\"userManagement.deactivated\">Deactivated</button> <button class=\"btn btn-success btn-xs\" ng-click=\"vm.setActive(user, false)\" ng-show=\"user.activated\" ng-disabled=\"vm.currentAccount.login==user.login\" data-translate=\"userManagement.activated\">Activated</button></td><td>{{user.langKey}}</td><td><div ng-repeat=\"authority in user.authorities\"><span class=\"label label-info\">{{ authority }}</span></div></td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"user-management-detail({login:user.login})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"user-management.edit({login:user.login})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"user-management.delete({login:user.login})\" class=\"btn btn-danger btn-sm\" ng-disabled=\"vm.currentAccount.login==user.login\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><jhi-item-count page=\"vm.page\" total=\"vm.queryCount\" items-per-page=\"vm.itemsPerPage\"></jhi-item-count><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.transition()\"></uib-pagination></div></div>');\n$templateCache.put('app/components/login/login.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"login.title\">Sign in</h4></div><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"login.title\">Sign in</h1></div><div class=\"col-md-8 col-md-offset-2\"><div class=\"alert alert-danger\" ng-show=\"vm.authenticationError\" data-translate=\"login.messages.error.authentication\"><strong>Failed to sign in!</strong> Please check your credentials and try again.</div></div><div class=\"col-md-8 col-md-offset-2\"><form class=\"form\" role=\"form\" ng-submit=\"vm.login($event)\"><div class=\"form-group\"><label for=\"username\" data-translate=\"global.form.username\">Login</label><input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.username\"></div><div class=\"form-group\"><label for=\"password\" data-translate=\"login.form.password\">Password</label><input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"{{\\'login.form.password.placeholder\\' | translate}}\" ng-model=\"vm.password\"></div><button type=\"submit\" class=\"btn btn-primary\" data-translate=\"login.form.button\">Sign in</button></form><p></p><div class=\"alert alert-warning\"><a class=\"alert-link\" href=\"\" ng-click=\"vm.requestResetPassword()\" data-translate=\"login.password.forgot\">Did you forget your password?</a></div><div class=\"alert alert-warning\" data-translate=\"global.messages.info.register\" translate-compile>You don\\'t have an account yet? <a class=\"alert-link\" href=\"\" ng-click=\"vm.register()\">Register a new account</a></div></div></div></div>');\n$templateCache.put('app/entities/floor/floor.html','<div><div ng-if=\"showLabel\"><label class=\"floor\">{{f.name}}</label><button type=\"button\" class=\"btn btn-link btn-xs\" ng-click=\"isCollapsed.floor = !isCollapsed.floor\"><span class=\"mdi mdi-chevron-down\" ng-if=\"isCollapsed.floor\"></span> <span class=\"mdi mdi-chevron-up\" ng-if=\"!isCollapsed.floor\"></span></button></div><div ng-if=\"!isCollapsed.floor || !showLabel\"><div ng-repeat=\"r in f.rooms\"><room room=\"r\" show-label=\"f.rooms.length > 1\" is-collapsed=\"isCollapsed.room[$index]\" filter=\"filter\"></div></div></div>');\n$templateCache.put('app/entities/house/house.html','<div><label class=\"house\">{{h.name}}</label><span class=\"summary\" ng-if=\"h.floors.length == 1\">({{h.floors[0].name}})</span> <button type=\"button\" class=\"btn btn-default btn-xs\" ng-click=\"isCollapsed.house = !isCollapsed.house\"><span class=\"mdi mdi-chevron-down\" ng-if=\"isCollapsed.house\"></span> <span class=\"mdi mdi-chevron-up\" ng-if=\"!isCollapsed.house\"></span></button> <button type=\"button\" class=\"btn btn-default btn-xs\" ng-click=\"expandAllChildren( {house: h, expand: isCollapsed.allChildrenExpanded } )\"><span class=\"mdi mdi-chevron-double-down\" ng-if=\"!isCollapsed.allChildrenExpanded\"></span> <span class=\"mdi mdi-chevron-double-up\" ng-if=\"isCollapsed.allChildrenExpanded\"></span></button><div class=\"filters-bar\"><button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.DOOR, \\'btn-primary\\': isCollapsed.filter.DOOR }\" ng-click=\"isCollapsed.filter.DOOR = !isCollapsed.filter.DOOR\"><span class=\"mdi mdi-glassdoor\"></button> <button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.WINDOW, \\'btn-primary\\': isCollapsed.filter.WINDOW }\" ng-click=\"isCollapsed.filter.WINDOW = !isCollapsed.filter.WINDOW\"><span class=\"mdi mdi-window-open\"></button> <button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.LIGHT, \\'btn-primary\\': isCollapsed.filter.LIGHT }\" ng-click=\"isCollapsed.filter.LIGHT = !isCollapsed.filter.LIGHT\"><span class=\"mdi mdi-lightbulb\"></button> <button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.CLIMATE, \\'btn-primary\\': isCollapsed.filter.CLIMATE }\" ng-click=\"isCollapsed.filter.CLIMATE = !isCollapsed.filter.CLIMATE\"><span class=\"mdi mdi-thermometer\"></button> <button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.COVER, \\'btn-primary\\': isCollapsed.filter.COVER }\" ng-click=\"isCollapsed.filter.COVER = !isCollapsed.filter.COVER\"><span class=\"mdi mdi-blinds\"></button> <button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.ALARM, \\'btn-primary\\': isCollapsed.filter.ALARM }\" ng-click=\"isCollapsed.filter.ALARM = !isCollapsed.filter.ALARM\"><span class=\"mdi mdi-security-home\"></button> <button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-default\\': !isCollapsed.filter.CAMERA, \\'btn-primary\\': isCollapsed.filter.CAMERA }\" ng-click=\"isCollapsed.filter.CAMERA = !isCollapsed.filter.CAMERA\"><span class=\"mdi mdi-camcorder\"></button> <button type=\"button\" class=\"btn btn-xs btn-link\" ng-click=\"isCollapsed.filter.DOOR = isCollapsed.filter.WINDOW = isCollapsed.filter.LIGHT = isCollapsed.filter.CLIMATE = isCollapsed.filter.COVER = isCollapsed.filter.ALARM = isCollapsed.filter.CAMERA = true\">All</button> <button type=\"button\" class=\"btn btn-xs btn-link\" ng-click=\"isCollapsed.filter.DOOR = isCollapsed.filter.WINDOW = isCollapsed.filter.LIGHT = isCollapsed.filter.CLIMATE = isCollapsed.filter.COVER = isCollapsed.filter.ALARM = isCollapsed.filter.CAMERA = false\">None</button></div><div uib-collapse=\"isCollapsed.house\"><div ng-repeat=\"f in h.floors\"><floor floor=\"f\" show-label=\"h.floors.length > 1\" is-collapsed=\"isCollapsed.floor[$index]\" filter=\"isCollapsed.filter\"></div><div ng-repeat=\"i in h.items\"><item item=\"i\" filter=\"isCollapsed.filter\"></div></div></div>');\n$templateCache.put('app/entities/item/item.html','<div><alarm class=\"item\" item=\"i\" ng-if=\"i.type == \\'ALARM\\' && filter.ALARM\"><door1 class=\"item\" item=\"i\" ng-if=\"i.type == \\'DOOR1\\' && filter.DOOR\"><door2r class=\"item\" item=\"i\" ng-if=\"i.type == \\'DOOR2R\\' && filter.DOOR\"><window1 class=\"item\" item=\"i\" ng-if=\"i.type == \\'WINDOW1\\' && filter.WINDOW\"><window1r class=\"item\" item=\"i\" ng-if=\"i.type == \\'WINDOW1R\\' && filter.WINDOW\"><window2r class=\"item\" item=\"i\" ng-if=\"i.type == \\'WINDOW2R\\' && filter.WINDOW\"><light class=\"item\" item=\"i\" ng-if=\"i.type == \\'LIGHT\\' && filter.LIGHT\"><camera class=\"item\" item=\"i\" ng-if=\"i.type == \\'CAMERA\\' && filter.CAMERA\"><temphum class=\"item\" item=\"i\" ng-if=\"i.type == \\'TEMPERATURE_HUMIDITY\\' && filter.CLIMATE\"><cover class=\"item\" item=\"i\" ng-if=\"i.type == \\'COVER\\' && filter.COVER\"><roller1 class=\"item\" item=\"i\" ng-if=\"i.type == \\'ROLLER1\\' && filter.COVER\"><roller1auto class=\"item\" item=\"i\" ng-if=\"i.type == \\'ROLLER1_AUTO\\' && filter.COVER\"></div>');\n$templateCache.put('app/entities/items/alarm.html','<div><span class=\"mdi mdi-security-home\">{{i.name}}</span></div>');\n$templateCache.put('app/entities/items/camera.html','<div><span class=\"mdi mdi-camcorder\">{{i.name}}</div>');\n$templateCache.put('app/entities/items/cover.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-grid\">{{i.name}}<div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state == \\'OPEN\\', \\'info\\': i.state == \\'CLOSED\\' }\">{{i.state}}</span></div></div>');\n$templateCache.put('app/entities/items/door1.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-glassdoor\">{{i.name}}<div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state == \\'OPEN\\', \\'info\\': i.state == \\'CLOSED\\' }\">{{i.state}}</span></div></div>');\n$templateCache.put('app/entities/items/door2r.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-glassdoor\">{{i.name}}</span><div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state.left == \\'OPEN\\', \\'info\\': i.state.left == \\'CLOSED\\' }\">{{i.state.left}}</span> <span class=\"state\" ng-class=\"{ \\'warning\\': i.state.right == \\'OPEN\\', \\'info\\': i.state.right == \\'CLOSED\\' }\">{{i.state.right}}</span> <span class=\"state\" ng-class=\"{ \\'warning\\': i.state.recline == \\'OPEN\\', \\'info\\': i.state.recline == \\'CLOSED\\' }\">{{i.state.recline == \\'OPEN\\' ? \\'RECLINED\\' : i.state.recline }}</span></div></div>');\n$templateCache.put('app/entities/items/light.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-lightbulb\">{{i.name}}</span><div style=\"float:right\"><button type=\"button\" class=\"btn btn-xs\" ng-class=\"{ \\'btn-warning\\': i.state == \\'ON\\', \\'btn-info\\': i.state == \\'OFF\\' }\" ng-click=\"i.state == \\'ON\\' ? i.state = \\'OFF\\' : i.state = \\'ON\\'\">{{i.state}}</button></div></div>');\n$templateCache.put('app/entities/items/roller1.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-blinds\">{{i.name}}<div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state == \\'OPEN\\', \\'info\\': i.state == \\'CLOSED\\' }\">{{i.state}}</span></div></div>');\n$templateCache.put('app/entities/items/roller1_auto.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-blinds\">{{i.name}}<div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state.main == \\'OPEN\\', \\'info\\': i.state.main == \\'CLOSED\\' }\">{{i.state.main}}</span><rzslider data-rz-slider-model=\"i.state.percent\"></rzslider></div></div>');\n$templateCache.put('app/entities/items/temphum.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-thermometer\">{{i.name}}<div class=\"state-container\"><span class=\"temperature mdi mdi-thermometer-lines\">{{i.state.temperature}}\\xB0C</span> <span class=\"humidity mdi mdi-water\">{{i.state.humidity}}%</span></div></div>');\n$templateCache.put('app/entities/items/window1.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-window-open\">{{i.name}}<div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state == \\'OPEN\\', \\'info\\': i.state == \\'CLOSED\\' }\">{{i.state}}</span></div></div>');\n$templateCache.put('app/entities/items/window1r.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-window-open\">{{i.name}}</span><div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state.main == \\'OPEN\\', \\'info\\': i.state.main == \\'CLOSED\\' }\">{{i.state.main}}</span> <span class=\"state\" ng-class=\"{ \\'warning\\': i.state.recline == \\'OPEN\\', \\'info\\': i.state.recline == \\'CLOSED\\' }\">{{i.state.recline == \\'OPEN\\' ? \\'RECLINED\\' : i.state.recline }}</span></div></div>');\n$templateCache.put('app/entities/items/window2r.html','<div style=\"overflow: auto\"><span class=\"mdi mdi-window-open\">{{i.name}}</span><div class=\"state-container\"><span class=\"state\" ng-class=\"{ \\'warning\\': i.state.left == \\'OPEN\\', \\'info\\': i.state.left == \\'CLOSED\\' }\">{{i.state.left}}</span> <span class=\"state\" ng-class=\"{ \\'warning\\': i.state.right == \\'OPEN\\', \\'info\\': i.state.right == \\'CLOSED\\' }\">{{i.state.right}}</span> <span class=\"state\" ng-class=\"{ \\'warning\\': i.state.recline == \\'OPEN\\', \\'info\\': i.state.recline == \\'CLOSED\\' }\">{{i.state.recline == \\'OPEN\\' ? \\'RECLINED\\' : i.state.recline }}</span></div></div>');\n$templateCache.put('app/entities/mqtt-item/mqtt-item-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.mqttItem.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"eHomeApp.mqttItem.delete.question\" translate-values=\"{id: \\'{{vm.mqttItem.id}}\\'}\">Are you sure you want to delete this Mqtt Item?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/mqtt-item/mqtt-item-detail.html','<div><h2><span data-translate=\"eHomeApp.mqttItem.detail.title\">Mqtt Item</span> {{vm.mqttItem.id}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"eHomeApp.mqttItem.topic\">Topic</span></dt><dd><span>{{vm.mqttItem.topic}}</span></dd><dt><span data-translate=\"eHomeApp.mqttItem.state\">State</span></dt><dd><span>{{vm.mqttItem.state}}</span></dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"mqtt-item-detail.edit({id:vm.mqttItem.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-sm-down\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/mqtt-item/mqtt-item-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myMqttItemLabel\" data-translate=\"eHomeApp.mqttItem.home.createOrEditLabel\">Create or edit a Mqtt Item</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"vm.mqttItem.id\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.mqttItem.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"eHomeApp.mqttItem.topic\" for=\"field_topic\">Topic</label><input type=\"text\" class=\"form-control\" name=\"topic\" id=\"field_topic\" ng-model=\"vm.mqttItem.topic\" required><div ng-show=\"editForm.topic.$invalid\"><p class=\"help-block\" ng-show=\"editForm.topic.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"eHomeApp.mqttItem.state\" for=\"field_state\">State</label><input type=\"text\" class=\"form-control\" name=\"state\" id=\"field_state\" ng-model=\"vm.mqttItem.state\" required><div ng-show=\"editForm.state.$invalid\"><p class=\"help-block\" ng-show=\"editForm.state.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/mqtt-item/mqtt-items.html','<div><h2 data-translate=\"eHomeApp.mqttItem.home.title\">Mqtt Items</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"mqtt-item.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span data-translate=\"eHomeApp.mqttItem.home.createLabel\">Create new Mqtt Item</span></button></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr><th><span data-translate=\"global.field.id\">ID</span></th><th><span data-translate=\"eHomeApp.mqttItem.topic\">Topic</span></th><th><span data-translate=\"eHomeApp.mqttItem.state\">State</span></th><th></th></tr></thead><tbody><tr ng-repeat=\"mqttItem in vm.mqttItems track by mqttItem.id\"><td><a ui-sref=\"mqtt-item-detail({id:mqttItem.id})\">{{mqttItem.id}}</a></td><td>{{mqttItem.topic}}</td><td>{{mqttItem.state}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"mqtt-item-detail({id:mqttItem.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-sm-down\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"mqtt-item.edit({id:mqttItem.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-sm-down\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"mqtt-item.delete({id:mqttItem.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-sm-down\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div></div>');\n$templateCache.put('app/entities/opening/opening.html','<div><span ng-if=\"type == DOOR\" class=\"mdi mdi-glassdoor\"><span ng-if=\"type == WINDOW\" class=\"mdi mdi-window-closed\"></div>');\n$templateCache.put('app/entities/room/room.html','<div ng-if=\"showLabel\"><label class=\"room\">{{r.name}}</label><button type=\"button\" class=\"btn btn-link btn-xs\" ng-click=\"isCollapsed.room = !isCollapsed.room\"><span class=\"mdi mdi-chevron-down\" ng-if=\"isCollapsed.room\"></span> <span class=\"mdi mdi-chevron-up\" ng-if=\"!isCollapsed.room\"></span></button></div><div ng-if=\"!isCollapsed.room || !showLabel\"><div ng-repeat=\"i in r.items\"><item item=\"i\" filter=\"filter\"></item></div></div>');\n$templateCache.put('app/layouts/error/accessdenied.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div class=\"alert alert-danger\" data-translate=\"error.403\">You are not authorized to access the page.</div></div></div></div>');\n$templateCache.put('app/layouts/error/error.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div ng-show=\"errorMessage\"><div class=\"alert alert-danger\">{{errorMessage}}</div></div></div></div></div>');\n$templateCache.put('app/layouts/navbar/navbar.html','<nav class=\"navbar navbar-default\" role=\"navigation\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle\" ng-click=\"vm.toggleNavbar()\"><span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span></button> <a class=\"navbar-brand logo\" href=\"#/\" ng-click=\"vm.collapseNavbar()\"><img class=\"logo-img\" src=\"content/images/logo-jhipster.png\" alt=\"logo\"> <span data-translate=\"global.title\">Ehome</span> <span class=\"navbar-version\">v{{VERSION}}</span></a></div><div class=\"navbar-collapse\" uib-collapse=\"vm.isNavbarCollapsed\" ng-switch=\"vm.isAuthenticated()\"><ul class=\"nav navbar-nav navbar-right\"><li ui-sref-active=\"active\"><a ui-sref=\"home\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-home\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.home\">Home</span></a></li><!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here --><li ng-class=\"{active: vm.$state.includes(\\'entity\\')}\" ng-switch-when=\"true\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"entity-menu\"><span><span class=\"glyphicon glyphicon-th-list\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.entities.main\">Entities </span><b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\"><a ui-sref=\"mqtt-item\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.mqttItem\">Mqtt Item</span></a></li><!-- jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here --></ul></li><li ng-class=\"{active: vm.$state.includes(\\'account\\')}\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"account-menu\"><span><span class=\"glyphicon glyphicon-user\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.account.main\">Account </span><b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"settings\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-wrench\"></span>&nbsp; <span data-translate=\"global.menu.account.settings\">Settings</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"password\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-lock\"></span>&nbsp; <span data-translate=\"global.menu.account.password\">Password</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a href=\"\" ng-click=\"vm.logout()\" id=\"logout\"><span class=\"glyphicon glyphicon-log-out\"></span>&nbsp; <span data-translate=\"global.menu.account.logout\">Sign out</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"false\"><a href=\"\" ng-click=\"vm.login()\" id=\"login\"><span class=\"glyphicon glyphicon-log-in\"></span>&nbsp; <span data-translate=\"global.menu.account.login\">Sign in</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"false\"><a ui-sref=\"register\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-plus-sign\"></span>&nbsp; <span data-translate=\"global.menu.account.register\">Register</span></a></li></ul></li><li ng-class=\"{active: vm.$state.includes(\\'admin\\')}\" ng-switch-when=\"true\" has-authority=\"ROLE_ADMIN\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"admin-menu\"><span><span class=\"glyphicon glyphicon-tower\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.admin.main\">Administration</span> <b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\"><a ui-sref=\"user-management\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-user\"></span>&nbsp; <span data-translate=\"global.menu.admin.userManagement\">User management</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-metrics\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-dashboard\"></span>&nbsp; <span data-translate=\"global.menu.admin.metrics\">Metrics</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-health\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-heart\"></span>&nbsp; <span data-translate=\"global.menu.admin.health\">Health</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-configuration\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-list-alt\"></span>&nbsp; <span data-translate=\"global.menu.admin.configuration\">Configuration</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"audits\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-bell\"></span>&nbsp; <span data-translate=\"global.menu.admin.audits\">Audits</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"logs\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-tasks\"></span>&nbsp; <span data-translate=\"global.menu.admin.logs\">Logs</span></a></li><li ng-show=\"vm.swaggerEnabled\" ui-sref-active=\"active\"><a ui-sref=\"docs\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-book\"></span>&nbsp; <span data-translate=\"global.menu.admin.apidocs\">API</span></a></li><!-- jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here --></ul></li><li ui-sref-active=\"active\" uib-dropdown class=\"dropdown pointer\" ng-controller=\"JhiLanguageController as languageVm\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" ng-if=\"languageVm.languages.length > 1\"><span><span class=\"glyphicon glyphicon-flag\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.language\">Language</span> <b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu ng-if=\"languageVm.languages.length > 1\"><li active-menu=\"{{language}}\" ng-repeat=\"language in languageVm.languages\"><a href=\"\" ng-click=\"languageVm.changeLanguage(language);vm.collapseNavbar();\">{{language | findLanguageFromKey}}</a></li></ul></li></ul></div></div></nav>');\n$templateCache.put('app/account/reset/finish/reset.finish.html','<div><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"reset.finish.title\">Reset password</h1><div class=\"alert alert-danger\" data-translate=\"reset.finish.messages.keymissing\" ng-show=\"vm.keyMissing\"><strong>The password reset key is missing.</strong></div><div class=\"alert alert-warning\" ng-hide=\"vm.success || vm.keyMissing\"><p data-translate=\"reset.finish.messages.info\">Choose a new password</p></div><div class=\"alert alert-danger\" ng-show=\"vm.error\"><p data-translate=\"reset.finish.messages.error\">Your password couldn\\'t be reset. Remember a password request is only valid for 24 hours.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success\"><p data-translate=\"reset.finish.messages.success\" translate-compile><strong>Your password has been reset.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</p></div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><div ng-hide=\"vm.keyMissing\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.finishReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.resetAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your password confirmation is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your password confirmation is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your password confirmation cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.finish.form.button\">Reset Password</button></form></div></div></div></div>');\n$templateCache.put('app/account/reset/request/reset.request.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"reset.request.title\">Reset your password</h1><div class=\"alert alert-danger\" data-translate=\"reset.request.messages.notfound\" ng-show=\"vm.errorEmailNotExists\"><strong>Email address isn\\'t registered!</strong> Please check and try again.</div><div class=\"alert alert-warning\" ng-hide=\"vm.success\"><p data-translate=\"reset.request.messages.info\">Enter the email address you used to register.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success == \\'OK\\'\"><p data-translate=\"reset.request.messages.success\">Check your emails for details on how to reset your password.</p></div><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.requestReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.request.form.button\">Reset</button></form></div></div></div>');}]);})();"],"sourceRoot":"/source/"}